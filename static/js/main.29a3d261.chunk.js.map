{"version":3,"sources":["components/StarLevel.jsx","components/CharactersPage.jsx","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","StarLevel","props","name","disabled","currentLevel","level","className","map","Fragment","key","id","type","value","checked","onChange","setStage","htmlFor","elementList","weaponList","CharactersPage","state","elementFilters","weaponFilters","element","this","includes","filter","item","setState","weapon","onClick","toggleElement","src","process","alt","toggleWeapon","Object","entries","characters","selected","e","toggleCharacter","getLevel","setCharacterStage","to","React","Component","CharacterInfo","character","talents","toLowerCase","talent","WeaponsPage","getImagePath","material","replaceAll","MaterialsPage","materials","forEach","elemental","undefined","specialty","i","stage","stages","crystal","crystal_stg","common","common_stg","hasOwnProperty","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","names","keys","values","App","newObj","assign","persistState","isCharacterSelected","getCharacterLevel","JSON","parse","localStorage","getItem","weapons","setItem","stringify","basename","exact","path","render","Characters","match","params","component","Stages","Materials","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29a3d261.chunk.js","sourcesContent":["import React from 'react';\nimport './StarLevel.css';\n\nconst characterLevels = [6,5,4,3,2,1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction StarLevel(props) {\n    const name = props.name;\n    const disabled = props.disabled;\n    const currentLevel = props.level;\n    return (\n        <div className=\"star-level\">\n            {\n            characterLevels.map(level => (\n                <React.Fragment key={level}>\n                    <input\n                        id={`${name}${level}`}\n                        type=\"radio\"\n                        name={name}\n                        value={level}\n                        disabled={disabled}\n                        checked={!disabled && level === currentLevel}\n                        onChange={() => props.setStage(name, level)}/>\n                    <label htmlFor={`${name}${level}`}></label>\n                </React.Fragment>\n            ))\n            }\n        </div>\n    )\n}\n\nexport default StarLevel;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharactersPage.css\";\n\nlet elementList = ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro'];\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { elementFilters: [...elementList], weaponFilters: [...weaponList] };\n  }\n\n  toggleElement(element) {\n    let elementFilters = this.state.elementFilters;\n    elementFilters = elementFilters.includes(element) ? elementFilters.filter(item => item !== element) : [element, ...elementFilters];\n    this.setState({elementFilters});\n  }\n\n  toggleWeapon(weapon) {\n    let weaponFilters = this.state.weaponFilters;\n    weaponFilters = weaponFilters.includes(weapon) ? weaponFilters.filter(item => item !== weapon) : [weapon, ...weaponFilters];\n    this.setState({weaponFilters});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"filters\">\n          <ul className=\"element-filters\">\n            {\n              elementList.map(element => (\n                <li key={element}>\n                  <button className={\"filter \" + (this.state.elementFilters.includes(element) ? 'active' : '')} onClick={() => this.toggleElement(element)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + element + '.png'} alt={element}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n          <ul className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <li key={weapon}>\n                  <button className={\"filter \" + (this.state.weaponFilters.includes(weapon) ? 'active' : '')} onClick={() => this.toggleWeapon(weapon)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-list\">\n            {\n              Object.entries(this.props.characters)\n                .filter(([key, value]) => ['flex', ...this.state.elementFilters].includes(value.type) && this.state.weaponFilters.includes(value.weapon))\n                .map(([key, value]) => (\n                  <div key={key} className=\"character-portrait\">\n                    <img\n                      className={\"character-icon \" + (this.props.selected(key) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + value.name + '.png'}\n                      alt={value.name}\n                      onClick={(e) => this.props.toggleCharacter(key, e)}/>\n                    {\n                      key !== 'traveler' &&\n                      <img\n                        className={\"character-type \" + (this.props.selected(key) ? '' : 'inactive')}\n                        src={process.env.PUBLIC_URL + '/images/' + value.type + '.png'}\n                        alt={value.type}/>\n                    }\n                    <StarLevel\n                      name={key}\n                      level={this.props.getLevel(key)}\n                      disabled={!this.props.selected(key)}\n                      setStage={this.props.setCharacterStage}\n                    />\n                    <NavLink to={`/characters/${key}`} className=\"character-name\">{value.name}</NavLink>\n                  </div>\n                ))\n            }\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharacterInfo.css\";\n\nfunction CharacterInfo(props) {\n    const name = props.character.name;\n    const talents = props.character.talents;\n    return (\n        <> \n            <NavLink className=\"back-button\" to=\"/Characters\">&larr;</NavLink>\n            <div className=\"character-card\">\n                <h2 className=\"character-name info\">{name}</h2>\n                <img className=\"character-icon info\" src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'} alt={name}/>\n                <StarLevel\n                      name={name.toLowerCase()}\n                      level={props.level}\n                      disabled={!props.selected(name.toLowerCase())}\n                      setStage={props.setCharacterStage}\n                />\n                <ul className=\"talent-list\">\n                    {\n                        talents.map(talent => (\n                            <li key={talent} className=\"talent\">\n                                <button className=\"talent-control\">-</button>\n                                {talent}\n                                <button className=\"talent-control\">+</button>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default CharacterInfo","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage() {\n    return (\n        <h1>Weapons</h1>\n    )\n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n    let materials = {};\n    Object.entries(props.state.characters)\n        .filter(([key, value]) => value['stage'] !== -1)\n        .forEach(([key, value]) => {\n            const element = props.characters[key.toLowerCase()].type;\n            const elemental = element !== 'flex' ? props.materials[element + '_elemental'].name : undefined;\n            const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n            for (let i = value.stage; i < 6; i++) {\n                let stage = props.stages.characters[i];\n                const crystal = props.materials[(element === 'flex' ? 'diamond' : element)+ '_crystal_' + stage.crystal_stg].name;\n                const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n                materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n                materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n                materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n                materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n                materials.mora = materials.hasOwnProperty('mora') ? materials.mora + stage.mora: stage.mora\n            }\n        });\n    let names = Object.keys(materials);\n    names = Object.values(props.materials).map(material => material.name).filter(name  => names.includes(name));\n\n    return (\n        <div>\n            <h1>Materials</h1>\n            <ul className=\"material-list\">\n                {\n                    names.map(material => (\n                        <li className=\"material\" key={material}>\n                            <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n                            <label className=\"material-text\">{material} - {materials[material]}</label>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nfunction getImagePath(material) {\n    return process.env.PUBLIC_URL + '/images/materials/' + material.toLowerCase().replaceAll(' ', '_') + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = JSON.parse(localStorage.getItem('state')) || { characters: {}, weapons: {} };\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  toggleCharacter = (character) => {\n    let characters = this.state.characters;\n    let newObj = {};\n    if (characters.hasOwnProperty(character)) {\n      if (characters[character].stage === -1) {\n        newObj = {[character]: {stage: 0}};\n      } else {\n        newObj = {[character]: {stage: -1}};\n      }\n    } else {\n      newObj = {[character]: {stage: 0}};\n    }\n    characters = Object.assign({}, characters, newObj);\n    this.persistState({characters});\n  }\n\n  setCharacterStage = (character, stage) => {\n    const characters = Object.assign({}, this.state.characters, {[character]: {stage}});\n    this.persistState({characters});\n  }\n\n  isCharacterSelected = (character) => {\n    return this.state.characters.hasOwnProperty(character) && this.state.characters[character].stage !== -1;\n  }\n\n  getCharacterLevel = (character) => {\n    return this.isCharacterSelected(character) ? this.state.characters[character].stage : -1;\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <React.Fragment>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink exact to=\"/Characters\">Characters</NavLink></li>\n              <li><NavLink exact to=\"/Weapons\">Weapons</NavLink></li>\n              <li><NavLink exact to=\"/Materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/Characters\"/>\n            </Route>\n            <Route exact path=\"/Characters\" render={() => (\n              <CharactersPage\n                characters={Characters}\n                selected={this.isCharacterSelected}\n                getLevel={this.getCharacterLevel}\n                toggleCharacter = {this.toggleCharacter}\n                setCharacterStage = {this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}\n                selected={this.isCharacterSelected}\n                level={this.getCharacterLevel(props.match.params.character)}\n                toggleCharacter = {this.toggleCharacter}\n                setCharacterStage = {this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/Weapons\" component={WeaponsPage}></Route>\n            <Route path=\"/Materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}