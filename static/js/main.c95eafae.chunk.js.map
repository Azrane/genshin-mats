{"version":3,"sources":["components/CharactersPage.jsx","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","elementList","weaponList","CharactersPage","props","toggleCharacter","bind","setCharacterStage","state","elementFilters","weaponFilters","character","this","stage","element","includes","filter","item","setState","weapon","hasOwnProperty","level","selected","Fragment","className","map","key","onClick","toggleElement","src","process","alt","toggleWeapon","Object","values","characters","type","name","e","id","value","disabled","checked","isLevel","onChange","htmlFor","to","toLowerCase","React","Component","CharacterInfo","talents","talent","WeaponsPage","getImagePath","material","replaceAll","MaterialsPage","materials","entries","forEach","elemental","undefined","specialty","i","stages","crystal","crystal_stg","common","common_stg","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","names","keys","App","JSON","parse","localStorage","getItem","persistState","setItem","stringify","basename","exact","path","render","Characters","match","params","component","Stages","Materials","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c95eafae.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport \"./CharactersPage.css\";\n\nlet characterLevels = [6,5,4,3,2,1]; // reversed order because rotateY done in css due to nature of css selectors\nlet elementList = ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro'];\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n    this.state = { elementFilters: [...elementList], weaponFilters: [...weaponList] };\n  }\n\n  toggleCharacter(character) {\n    this.props.toggleCharacter(character);\n  }\n\n  setCharacterStage(character, stage) {\n    this.props.setCharacterStage(character, stage);\n  }\n\n  toggleElement(element) {\n    let elementFilters = this.state.elementFilters;\n    elementFilters = elementFilters.includes(element) ? elementFilters.filter(item => item !== element) : [element, ...elementFilters];\n    this.setState({elementFilters});\n  }\n\n  toggleWeapon(weapon) {\n    let weaponFilters = this.state.weaponFilters;\n    weaponFilters = weaponFilters.includes(weapon) ? weaponFilters.filter(item => item !== weapon) : [weapon, ...weaponFilters];\n    this.setState({weaponFilters});\n  }\n\n  selected(character) {\n    return this.props.state.hasOwnProperty(character) && this.props.state[character].stage !== -1;\n  }\n\n  isLevel(character, level) {\n    return this.selected(character) && this.props.state[character]['stage'] === level;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"filters\">\n          <ul className=\"element-filters\">\n            {\n              elementList.map(element => (\n                <li key={element}>\n                  <button className={\"filter \" + (this.state.elementFilters.includes(element) ? 'active' : '')} onClick={() => this.toggleElement(element)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + element + '.png'} alt={element}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n          <ul className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <li key={weapon}>\n                  <button className={\"filter \" + (this.state.weaponFilters.includes(weapon) ? 'active' : '')} onClick={() => this.toggleWeapon(weapon)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-list\">\n            {\n              Object.values(this.props.characters)\n                .filter(character => ['flex', ...this.state.elementFilters].includes(character.type) && this.state.weaponFilters.includes(character.weapon))\n                .map(character => (\n                  <div key={character.name} className=\"character-portrait\">\n                    <img\n                      className={\"character-icon \" + (this.selected(character.name) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + character.name + '.png'}\n                      alt={character.name}\n                      onClick={(e) => this.toggleCharacter(character.name, e)}/>\n                    {\n                      character.name !== 'Traveler' &&\n                      <img\n                        className={\"character-type \" + (this.selected(character.name) ? '' : 'inactive')}\n                        src={process.env.PUBLIC_URL + '/images/' + character.type + '.png'}\n                        alt={character.type}/>\n                    }\n                    <div className=\"star-level\">\n                      {\n                        characterLevels.map(level => (\n                          <React.Fragment key={level}>\n                            <input\n                              id={`${character.name}${level}`}\n                              type=\"radio\"\n                              name={character.name}\n                              value={level}\n                              disabled={!this.selected(character.name)}\n                              checked={this.isLevel(character.name, level)}\n                              onChange={(e) => this.setCharacterStage(character.name, level, e)}/>\n                            <label htmlFor={`${character.name}${level}`}></label>\n                          </React.Fragment>\n                        ))\n                      }\n                    </div>\n                    <NavLink to={`/characters/${character.name.toLowerCase()}`} className=\"character-name\">{character.name}</NavLink>\n                  </div>\n                ))\n            }\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport \"./CharacterInfo.css\";\n\nlet characterLevels = [6,5,4,3,2,1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction CharacterInfo(props) {\n    const name = props.character.name;\n    const talents = props.character.talents;\n    return (\n        <> \n            <NavLink className=\"back-button\" to=\"/Characters\">&larr;</NavLink>\n            <div className=\"character-card\">\n                <h2 className=\"character-name info\">{name}</h2>\n                <img className=\"character-icon info\" src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'} alt={name}/>\n                <div className=\"star-level\">\n                    {\n                        characterLevels.map(level => (\n                            <React.Fragment key={level}>\n                                <input\n                                    id={`${name}${level}`}\n                                    type=\"radio\"\n                                    name={name}\n                                    value={level}\n                                />\n                                <label htmlFor={`${name}${level}`}></label>\n                            </React.Fragment>\n                        ))\n                    }\n                </div>\n                <ul className=\"talent-list\">\n                    {\n                        talents.map(talent => (\n                            <li key={talent} className=\"talent\">{talent}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default CharacterInfo","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage() {\n    return (\n        <h1>Weapons</h1>\n    )\n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n    let materials = {};\n    Object.entries(props.state)\n        .filter(([key, value]) => value['stage'] !== -1)\n        .forEach(([key, value]) => {\n            const element = props.characters[key.toLowerCase()].type;\n            const elemental = element !== 'flex' ? props.materials[element + '_elemental'].name : undefined;\n            const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n            for (let i = value.stage; i < 6; i++) {\n                let stage = props.stages.characters[i];\n                const crystal = props.materials[(element === 'flex' ? 'diamond' : element)+ '_crystal_' + stage.crystal_stg].name;\n                const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n                materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n                materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n                materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n                materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n                materials.mora = materials.hasOwnProperty('mora') ? materials.mora + stage.mora: stage.mora\n            }\n        });\n    let names = Object.keys(materials);\n    names = Object.values(props.materials).map(material => material.name).filter(name  => names.includes(name));\n\n    return (\n        <div>\n            <h1>Materials</h1>\n            <ul className=\"material-list\">\n                {\n                    names.map(material => (\n                        <li className=\"material\" key={material}>\n                            <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n                            <label className=\"material-text\">{material} - {materials[material]}</label>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nfunction getImagePath(material) {\n    return process.env.PUBLIC_URL + '/images/materials/' + material.toLowerCase().replaceAll(' ', '_') + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n    this.state = JSON.parse(localStorage.getItem('characters')) || { };\n  }\n\n  toggleCharacter(character) {\n    if (this.state.hasOwnProperty(character)) {\n      if (this.state[character].stage === -1) {\n        this.persistState({[character]: {stage: 0}});\n      } else {\n        this.persistState({[character]: {stage: -1}});\n      }\n    } else {\n      this.persistState({[character]: {stage: 0}});\n    }\n  }\n\n  setCharacterStage(character, stage) {\n    this.persistState({[character]: {stage}}); // e.target.value is supposed to be integer, but somehow casted as string\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('characters', JSON.stringify(this.state)));\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <React.Fragment>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink exact to=\"/Characters\">Characters</NavLink></li>\n              <li><NavLink exact to=\"/Weapons\">Weapons</NavLink></li>\n              <li><NavLink exact to=\"/Materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/Characters\"/>\n            </Route>\n            <Route exact path=\"/Characters\" render={() => (\n              <CharactersPage\n                state={this.state}\n                characters={Characters}\n                toggleCharacter = {this.toggleCharacter}\n                setCharacterStage = {this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}/>\n            )}/>\n            <Route path=\"/Weapons\" component={WeaponsPage}></Route>\n            <Route path=\"/Materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}