{"version":3,"sources":["components/StarLevel.jsx","components/CharactersPage.jsx","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","StarLevel","props","name","disabled","currentLevel","level","className","map","Fragment","key","id","type","value","checked","onChange","setStage","htmlFor","elementList","weaponList","CharactersPage","state","element","newElement","this","undefined","setState","weapon","newWeapon","selectElement","src","process","alt","selectWeapon","Object","entries","characters","filter","selected","onClick","e","toggleCharacter","getCharacterStage","setCharacterStage","to","React","Component","CharacterInfo","character","characterKey","toLowerCase","talents","getTravelerElement","setTravelerElement","target","keys","charAt","toUpperCase","slice","stage","talent","setTalentLevel","getTalentLevel","WeaponsPage","weapons","addMaterial","materials","qty","hasOwnProperty","getImagePath","material","replaceAll","MaterialsPage","forEach","details","elemental","specialty","i","stages","crystal","crystal_stg","common","common_stg","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","values","reduce","allTalents","elementalTalents","assign","requirements","talent_boss_qty","talent_book_stg","talent_book_qty","talent_boss","talent_book","talent_common","names","includes","toLocaleString","DEFAULT_CHARACTER_STATE","Characters","traveler","obj","key2","nestedTalents","obj2","nestedTalent","DEFAULT_WEAPON_STATE","Weapons","DEFAULT_STATE","App","currentCharacter","newState","persistState","isCharacterSelected","currentTalents","savedState","JSON","parse","localStorage","getItem","savedCharacters","savedWeapons","setItem","stringify","basename","exact","path","render","match","params","Stages","Materials","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.90841ee2.chunk.js","sourcesContent":["import React from 'react';\nimport './StarLevel.css';\n\nconst characterLevels = [6, 5, 4, 3, 2, 1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction StarLevel(props) {\n  const name = props.name;\n  const disabled = props.disabled;\n  const currentLevel = props.level;\n  return (\n    <div className=\"star-level\">\n      {\n        characterLevels.map(level => (\n          <React.Fragment key={level}>\n            <input\n              id={`${name}${level}`}\n              type=\"radio\"\n              name={name}\n              value={level}\n              disabled={disabled}\n              checked={!disabled && level === currentLevel}\n              onChange={() => props.setStage(name, level)} />\n            <label className={disabled ? \"inactive\" : \"\"} htmlFor={`${name}${level}`}></label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default StarLevel;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharactersPage.css\";\n\nlet elementList = ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro'];\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  selectElement(element) {\n    const newElement = this.state.element === element ? undefined : element;\n    this.setState({element: newElement});\n  }\n\n  selectWeapon(weapon) {\n    const newWeapon = this.state.weapon === weapon ? undefined : weapon;\n    this.setState({weapon: newWeapon});\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"filters\">\n          <div className=\"element-filters\">\n            {\n              elementList.map(element => (\n                <React.Fragment key={element}>\n                  <input\n                    type=\"checkbox\"\n                    name={\"element\"}\n                    id={element}\n                    value={element}\n                    checked={this.state.element === element}\n                    onChange={() => this.selectElement(element)}\n                    />\n                  <label htmlFor={element}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + element + '.png'} alt={element}/>\n                  </label>\n                </React.Fragment>\n              ))\n            }\n          </div>\n          <div className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <React.Fragment key={weapon}>\n                  <input\n                    type=\"checkbox\"\n                    name={\"weapon\"}\n                    id={weapon}\n                    value={weapon}\n                    checked={this.state.weapon === weapon}\n                    onChange={() => this.selectWeapon(weapon)}\n                    />\n                  <label htmlFor={weapon}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </label>\n                </React.Fragment>\n              ))\n            }\n          </div>\n        </div>\n        <div className=\"character-list\">\n            {\n              Object.entries(this.props.characters)\n                .filter(([key, value]) => this.state.element === undefined || this.state.element === value.type || value.type === 'flex')\n                .filter(([key, value]) => this.state.weapon === undefined || this.state.weapon === value.weapon)\n                .map(([key, value]) => (\n                  <div key={key} className=\"character-portrait\">\n                    <img\n                      className={\"character-icon \" + (this.props.selected(key) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + value.name + '.png'}\n                      alt={value.name}\n                      onClick={(e) => this.props.toggleCharacter(key, e)}/>\n                    {\n                      key !== 'traveler' &&\n                      <img\n                        className={\"character-type \" + (this.props.selected(key) ? '' : 'inactive')}\n                        src={process.env.PUBLIC_URL + '/images/' + value.type + '.png'}\n                        alt={value.type}/>\n                    }\n                    <StarLevel\n                      name={key}\n                      level={this.props.getCharacterStage(key)}\n                      disabled={!this.props.selected(key)}\n                      setStage={this.props.setCharacterStage}\n                    />\n                    <NavLink to={`/characters/${key}`} className=\"character-name\">{value.name}</NavLink>\n                  </div>\n                ))\n            }\n        </div>\n      </>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharacterInfo.css\";\n\nfunction CharacterInfo(props) {\n  const name = props.character.name;\n  const characterKey = name.toLowerCase();\n  const disabled = !props.selected(characterKey);\n  const talents = props.character.talents;\n  let element = name === 'Traveler' ? props.getTravelerElement() : props.character.type;\n  return (\n    <>\n      <NavLink className=\"back-button\" to=\"/characters\">&larr;</NavLink>\n      <div className={\"character-info\" + (!disabled ? '' : ' inactive')}>\n        <div className=\"character-info-grp\">\n          <h2 className={\"character-name\"}>{name}</h2>\n          {\n            characterKey === 'traveler' &&\n            <select className=\"element-list\" value={props.getTravelerElement()} onChange={(e) => props.setTravelerElement(e.target.value)}>\n              {\n                Object.keys(talents).map(element => (\n                  <option key={element} value={element}>\n                    {element.charAt(0).toUpperCase() + element.slice(1)}\n                  </option>\n                ))\n              }\n            </select>\n          }\n          <div className=\"character-card\">\n            <img\n              className={\"character-icon\"}\n              src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'}\n              alt={name}\n              onClick={(e) => props.toggleCharacter(characterKey, e)} />\n            {\n              <img\n                className={\"character-type\"}\n                src={process.env.PUBLIC_URL + '/images/' + element + '.png'}\n                alt={element} />\n            }\n          </div>\n          <StarLevel\n            name={characterKey}\n            level={props.stage}\n            disabled={disabled}\n            setStage={props.setCharacterStage}\n          />\n        </div>\n        <div className=\"character-info-grp\">\n          <h2 className=\"talent-title\">Talents</h2>\n          <ul className=\"talent-list\">\n            {\n              (name === 'Traveler' ? talents[props.getTravelerElement()] : talents).map(talent => (\n                <li key={talent} className=\"talent\">\n                  <span className=\"talent-name\">{talent}</span>\n                  <div className=\"talent-label\">\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) - 1)}>-</button>\n                    <span className=\"talent-level\">{`Lv. ${props.getTalentLevel(characterKey, talent)}`}</span>\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) + 1)}>+</button>\n                  </div>\n\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-info-grp\">\n          <h2 className=\"ascension-title\">Ascension</h2>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CharacterInfo","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass WeaponsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  selectWeapon(weapon) {\n    const newWeapon = this.state.weapon === weapon ? undefined : weapon;\n    this.setState({weapon: newWeapon});\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"filters\">\n          <div className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <React.Fragment key={weapon}>\n                  <input\n                    type=\"checkbox\"\n                    id={weapon}\n                    name={\"weapon\"}\n                    value={weapon}\n                    checked={this.state.weapon === weapon}\n                    onChange={() => this.selectWeapon(weapon)}\n                    />\n                  <label htmlFor={weapon}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </label>\n                </React.Fragment>\n              ))\n            }\n          </div>\n        </div>\n  \n        {\n          Object.entries(this.props.weapons)\n          .filter(([key, value]) => this.state.weapon === undefined || this.state.weapon === value.type)\n          .map(([key, value]) => (\n            <img key={key} className=\"weapon\" src={process.env.PUBLIC_URL + '/images/weapons/' + key + '.png'} alt={value.name}/>\n          ))\n        }\n      </>\n    )\n  }\n  \n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n  let materials = {};\n  Object.entries(props.state.characters)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      const characters = props.characters;\n      const character = key;\n      const details = characters[character];\n      const element = props.characters[key.toLowerCase()].type;\n      const elemental = element !== 'flex' ? props.materials[element + '_elemental'].name : undefined;\n      const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n      // character ascension\n      for (let i = value.stage; i < 6; i++) {\n        let stage = props.stages.characters[i];\n        const crystal = props.materials[(element === 'flex' ? 'diamond' : element) + '_crystal_' + stage.crystal_stg].name;\n        const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n        materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n        materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n        materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n        materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n        addMaterial(materials, 'Mora', stage.mora);\n      }\n      // talent ascension\n      let talents = {};\n      if (character === 'traveler') {\n        Object.values(value.talents).reduce((allTalents, elementalTalents) => {\n          return Object.assign(allTalents, { ...elementalTalents });\n        }, talents);\n      } else {\n        talents = value.talents;\n      }\n      Object.entries(talents).forEach(([talent, level]) => {\n        for (let i = level - 1; i < 9; i++) {\n          const requirements = props.stages.talents[i];\n          const talent_boss_qty = requirements.talent_boss_qty;\n          const talent_book_stg = requirements.talent_book_stg;\n          const talent_book_qty = requirements.talent_book_qty;\n          const common_qty = requirements.common_qty;\n          const common_stg = requirements.common_stg;\n          const talent_boss = props.materials[details.talent_boss].name;\n          const talent_book = props.materials[(character === 'traveler' ? details.talent_book[i % 3] : details.talent_book) + \"_\" + talent_book_stg].name;\n          const common = props.materials[(character === 'traveler' ? details.talent_common : details.common) + \"_\" + common_stg].name;\n          addMaterial(materials, talent_boss, talent_boss_qty);\n          addMaterial(materials, talent_book, talent_book_qty);\n          addMaterial(materials, common, common_qty);\n          addMaterial(materials, 'Mora', requirements.mora);\n        }\n      })\n    });\n  let names = Object.keys(materials);\n  names = Object.values(props.materials).map(material => material.name).filter(name => names.includes(name));\n\n  return (\n    <div>\n      <ul className=\"material-list\">\n        {\n          names.map(material => (\n            <li className=\"material\" key={material}>\n              <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n              <label className=\"material-text\">{material} - {materials[material].toLocaleString()}</label>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nfunction addMaterial(materials, name, qty) {\n  materials[name] = materials.hasOwnProperty(name) ? materials[name] + qty : qty;\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\nimport Weapons from './data/weapons.json';\n\nimport './App.css';\n\n/*\nInitialize character state to stage = -1 (disabled) and all talent levels to 1\n*/\nconst DEFAULT_CHARACTER_STATE = Object.entries(Characters).reduce((state, [key, value]) => {\n  const traveler = key === 'traveler';\n  let talents = {};\n  if (traveler) {\n    Object.entries(value.talents).reduce((obj, [key2, value2]) => {\n      let nestedTalents = value2.reduce((obj2, nestedTalent) => {\n        return Object.assign(obj2, {[nestedTalent]: 1});\n      }, {});\n      return Object.assign(obj, {[key2]: nestedTalents});\n    }, talents);\n  } else {\n    value.talents.map(talent => {\n      return Object.assign(talents, {[talent]: 1});\n    });\n  }\n  let character = {stage: -1, talents};\n  if (traveler) {\n    character.element = 'anemo';\n  }\n  return Object.assign(state, {[key]: character});\n}, {});\n\nconst DEFAULT_WEAPON_STATE = Object.keys(Weapons).reduce((state, key) => {\n  return Object.assign(state, {[key]: {stage: -1}});\n}, {});\n\nconst DEFAULT_STATE = { characters: DEFAULT_CHARACTER_STATE, weapons: DEFAULT_WEAPON_STATE };\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    const savedState = JSON.parse(localStorage.getItem('state')) || DEFAULT_STATE;\n    const savedCharacters = Object.assign({}, DEFAULT_CHARACTER_STATE, {...savedState.characters});\n    const savedWeapons = Object.assign({}, DEFAULT_WEAPON_STATE, {...savedState.weapons});\n    this.state = Object.assign({}, DEFAULT_STATE, {characters: {...savedCharacters}, weapons: {...savedWeapons}});\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  /*\n  Set the character state back to default\n  Toggle the character between stage 0 (enabled) or -1 (disabled)\n  */\n  toggleCharacter = (character) => {\n    let characters = this.state.characters;\n    const currentCharacter = characters[character];\n    const stage = currentCharacter.stage === -1 ? 0 : -1;\n    const newState = Object.assign(currentCharacter, {...DEFAULT_CHARACTER_STATE[character], stage});\n    characters = Object.assign({}, {...characters, [character]: newState});\n    this.persistState({characters});\n  }\n\n  getCharacterStage = (character) => {\n    return this.isCharacterSelected(character) ? this.state.characters[character].stage : -1;\n  }\n\n  setCharacterStage = (character, stage) => {\n    const newState = Object.assign({}, this.state.characters[character], {stage});\n    const characters = Object.assign({}, this.state.characters, {[character]: newState});\n    this.persistState({characters});\n  }\n\n  getTalentLevel = (character, talent) => {\n    const currentCharacter = this.state.characters[character];\n    const talents = currentCharacter.talents;\n    return character === 'traveler' ? talents[currentCharacter.element][talent] : talents[talent];\n  }\n\n  setTalentLevel = (character, talent, level) => {\n    if (level < 1 || level > 10) {\n      return;\n    }\n    let currentCharacter = this.state.characters[character];\n    let currentTalents = currentCharacter.talents;\n    if (character === 'traveler') {\n      const element = currentCharacter.element;\n      const elementalTalents = Object.assign({}, currentTalents[element], {[talent]: level});\n      currentTalents = Object.assign({}, currentTalents, {[element]: elementalTalents});\n    } else {\n      currentTalents = Object.assign({}, currentTalents, {[talent]: level});\n    }\n    currentCharacter = Object.assign({}, currentCharacter, {talents: currentTalents});\n    const characters = Object.assign({}, this.state.characters, {[character]: currentCharacter});\n    this.persistState({characters});\n  }\n\n  isCharacterSelected = (character) => {\n    return this.state.characters[character].stage !== -1;\n  }\n\n  getTravelerElement = () => {\n    return this.state.characters.traveler.element;\n  }\n\n  setTravelerElement = (element) => {\n    const characters = this.state.characters;\n    this.persistState({characters: Object.assign({...characters}, {traveler: {...characters.traveler, element}})});\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <React.Fragment>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink exact to=\"/characters\">Characters</NavLink></li>\n              <li><NavLink exact to=\"/weapons\">Weapons</NavLink></li>\n              <li><NavLink exact to=\"/materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/characters\"/>\n            </Route>\n            <Route exact path=\"/characters\" render={() => (\n              <CharactersPage\n                characters={Characters}\n                selected={this.isCharacterSelected}\n                getCharacterStage={this.getCharacterStage}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}\n                selected={this.isCharacterSelected}\n                stage={this.getCharacterStage(props.match.params.character)}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}\n                getTalentLevel={this.getTalentLevel}\n                setTalentLevel={this.setTalentLevel}\n                getTravelerElement={this.getTravelerElement}\n                setTravelerElement={this.setTravelerElement}/>\n            )}/>\n            <Route path=\"/weapons\" render={(props) => (\n              <WeaponsPage\n                weapons={Weapons}\n              />\n            )}/>\n            <Route path=\"/materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}