{"version":3,"sources":["components/StarLevel.jsx","components/TypeFilter.jsx","components/CharactersPage.jsx","utils.js","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","StarLevel","props","name","disabled","currentLevel","level","className","map","Fragment","key","id","type","value","checked","onChange","setStage","htmlFor","filterLists","element","list","weapon","material","names","days","TypeFilter","filter","index","selectFilter","undefined","src","process","alt","CharactersPage","selectElement","newElement","state","setState","selectWeapon","newWeapon","searchText","this","placeholder","e","setSearchText","target","Object","entries","characters","includes","toLowerCase","selected","onClick","toggleCharacter","loading","getCharacterStage","setCharacterStage","to","React","Component","calculateCharacterMaterials","character","stage","details","Characters","requirements","Stages","crystal","Materials","crystal_stg","elemental","specialty","common","common_stg","assign","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","calculateTalentMaterials","talents","talent_boss","talent_book","talent_book_stg","talent_common","crown_qty","talent_boss_qty","talent_book_qty","calculateWeaponMaterials","Weapons","weapons","rarity","weapon_material","weapon_stg","common_material1","common1","common_material2","common2","weapon_qty","common_qty_1","common_qty_2","getImagePath","replaceAll","CharacterInfo","characterKey","getTravelerElement","setTravelerElement","keys","charAt","toUpperCase","slice","toLocaleString","talent","setTalentLevel","getTalentLevel","WeaponsPage","toggleWeapon","getWeaponStage","setWeaponStage","addMaterial","materials","qty","hasOwnProperty","MaterialsPage","useState","dayGroup","setDayGroup","materialType","setMaterialType","forEach","i","item","item_qty","values","reduce","allTalents","elementalTalents","day_group","DEFAULT_CHARACTER_STATE","traveler","obj","key2","nestedTalents","obj2","nestedTalent","DEFAULT_WEAPON_STATE","DEFAULT_STATE","App","currentCharacter","newState","persistState","isCharacterSelected","currentTalents","currentWeapon","isWeaponSelected","savedState","JSON","parse","localStorage","getItem","savedCharacters","savedWeapons","setItem","stringify","basename","exact","path","render","match","params","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc32f6fa.chunk.js","sourcesContent":["import React from 'react';\nimport './StarLevel.css';\n\nconst characterLevels = [6, 5, 4, 3, 2, 1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction StarLevel(props) {\n  const name = props.name;\n  const disabled = props.disabled;\n  const currentLevel = props.level;\n  return (\n    <div className=\"star-level\">\n      {\n        characterLevels.map(level => (\n          <React.Fragment key={level}>\n            <input\n              id={`${name}${level}`}\n              type=\"radio\"\n              name={name}\n              value={level}\n              disabled={disabled}\n              checked={!disabled && level === currentLevel}\n              onChange={() => props.setStage(name, level)} />\n            <label className={disabled ? \"inactive\" : \"\"} htmlFor={`${name}${level}`}></label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default StarLevel;","import React from 'react';\nimport './TypeFilter.css';\n\nconst filterLists = {\n  element: {\n    type: 'image',\n    list: ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro']\n  },\n  weapon: {\n    type: 'image',\n    list: ['bow', 'catalyst', 'claymore', 'polearm', 'sword']\n  },\n  material: {\n    type: 'text',\n    list: [\"character\", \"talent\", \"weapon\", \"common\"],\n    names: [\"Character\", \"Talent\", \"Weapon\", \"Common\"]\n  },\n  days: {\n    type: 'text',\n    list: [1, 2, 3],\n    names: ['Mon/Thu', 'Tue/Fri', 'Wed/Sat']\n  }\n}\n\nfunction TypeFilter(props) {\n  return (\n    <div className=\"type-filter\">\n      {\n        filterLists[props.type].list.map((filter, index) => (\n          <React.Fragment key={filter}>\n            <input\n              className=\"filter-input\"\n              type=\"checkbox\"\n              name={props.type}\n              id={filter}\n              value={filter}\n              checked={props.checked === filter}\n              onChange={() => props.checked === filter ? props.selectFilter(undefined) : props.selectFilter(filter)}\n            />\n            <label className=\"filter-label\" htmlFor={filter}>\n              {\n                filterLists[props.type].type === 'image' ?\n                <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + filter + '.png'} alt={filter} /> :\n                <div className=\"filter-text\">{filterLists[props.type].names[index]}</div>\n              }\n            </label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default TypeFilter;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport TypeFilter from './TypeFilter';\nimport \"./CharactersPage.css\";\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  selectElement = (element) => {\n    const newElement = this.state.element === element ? undefined : element;\n    this.setState({ element: newElement });\n  }\n\n  selectWeapon = (weapon) => {\n    const newWeapon = this.state.weapon === weapon ? undefined : weapon;\n    this.setState({ weapon: newWeapon });\n  }\n\n  setSearchText(searchText) {\n    this.setState({ searchText });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"filters\">\n          <div className=\"search-filter\">\n            <input\n              type=\"text\"\n              value={this.state.searchText}\n              placeholder=\"Search for a character...\"\n              onChange={(e) => this.setSearchText(e.target.value)} />\n          </div>\n\n          <TypeFilter type=\"element\" checked={this.state.element} selectFilter={this.selectElement} />\n          <TypeFilter type=\"weapon\" checked={this.state.weapon} selectFilter={this.selectWeapon} />\n          \n        </div>\n        <div className=\"character-list\">\n          {\n            Object.entries(this.props.characters)\n              .filter(([key, value]) => this.state.searchText === undefined || key.includes(this.state.searchText.toLowerCase()))\n              .filter(([key, value]) => this.state.element === undefined || this.state.element === value.type || value.type === 'flex')\n              .filter(([key, value]) => this.state.weapon === undefined || this.state.weapon === value.weapon)\n              .map(([key, value]) => (\n                <div key={key} className=\"character-portrait\">\n                  <button className=\"character-toggle\">\n                    <img\n                      className={\"character-icon \" + (this.props.selected(key) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + value.name + '.png'}\n                      alt={value.name}\n                      onClick={(e) => this.props.toggleCharacter(key, e)}\n                      loading=\"lazy\" />\n                  </button>\n                  {\n                    key !== 'traveler' &&\n                    <img\n                      className={\"character-type \" + (this.props.selected(key) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/' + value.type + '.png'}\n                      alt={value.type}\n                      loading=\"lazy\" />\n                  }\n                  <StarLevel\n                    name={key}\n                    level={this.props.getCharacterStage(key)}\n                    disabled={!this.props.selected(key)}\n                    setStage={this.props.setCharacterStage}\n                  />\n                  <NavLink to={`/characters/${key}`} className=\"character-name\">{value.name}</NavLink>\n                </div>\n              ))\n          }\n        </div>\n      </>\n    )\n  }\n}\n\nexport default CharactersPage","import Characters from './data/characters.json';\nimport Weapons from './data/weapons.json';\nimport Materials from './data/materials.json';\nimport Stages from './data/stages.json';\n\nexport const calculateCharacterMaterials = (character, stage) => {\n  if (stage < 0 || stage >= 6) return {};\n  const details = Characters[character];\n  const requirements = Stages.characters[stage];\n  const element = details.type;\n  const crystal = Materials[element + '_crystal_' + requirements.crystal_stg].name;\n  const elemental = element === 'flex' ? undefined : Materials[element + '_elemental'].name;\n  const specialty = Materials[details.specialty].name;\n  const common = Materials[details.common + '_' + requirements.common_stg].name;\n  return Object.assign({}, {\n    [crystal]: requirements.crystal_qty,\n    [elemental]: requirements.elemental_qty,\n    [specialty]: requirements.specialty_qty,\n    [common]: requirements.common_qty,\n    'Mora': requirements.mora\n  });\n}\n\nexport const calculateTalentMaterials = (character, level) => {\n  if (level > 8) return {};\n  const details = Characters[character];\n  const requirements = Stages.talents[level];\n  const talent_boss = Materials[details.talent_boss].name;\n  const talent_book = Materials[(character === 'traveler' ? details.talent_book[level % 3] : details.talent_book) + \"_\" + requirements.talent_book_stg].name;\n  const common = Materials[(character === 'traveler' ? details.talent_common : details.common) + \"_\" + requirements.common_stg].name;\n  return Object.assign({}, {\n    'Crown of Sagehood': requirements.crown_qty,\n    [talent_boss]: requirements.talent_boss_qty,\n    [talent_book]: requirements.talent_book_qty,\n    [common]: requirements.common_qty,\n    'Mora': requirements.mora\n  });\n}\n\nexport const calculateWeaponMaterials = (weapon, stage) => {\n  if (stage < 0 || stage >= 6) return {};\n  const details = Weapons[weapon];\n  const requirements = Stages.weapons[details.rarity][stage];\n  const weapon_material = Materials[`${details.weapon}_${requirements.weapon_stg}`].name;\n  const common_material1 = Materials[`${details.common1}_${requirements.common_stg}`].name;\n  const common_material2 = Materials[`${details.common2}_${requirements.common_stg}`].name;\n  return Object.assign({}, {\n    [weapon_material]: requirements.weapon_qty,\n    [common_material1]: requirements.common_qty_1,\n    [common_material2]: requirements.common_qty_2,\n    'Mora': requirements.mora\n  });\n}","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharacterInfo.css\";\nimport { calculateCharacterMaterials, calculateTalentMaterials } from '../utils';\n\nfunction CharacterInfo(props) {\n  const name = props.character.name;\n  const characterKey = name.toLowerCase();\n  const disabled = !props.selected(characterKey);\n  const talents = props.character.talents;\n  let element = name === 'Traveler' ? props.getTravelerElement() : props.character.type;\n  return (\n    <>\n      <NavLink className=\"back-button\" to=\"/characters\">&larr;</NavLink>\n      <div className={\"character-info\" + (!disabled ? '' : ' inactive')}>\n        <div className=\"character-portrait info\">\n          <h1 className={\"character-name info\"}>{name}</h1>\n          {\n            characterKey === 'traveler' &&\n            <select className=\"element-list\" value={props.getTravelerElement()} onChange={(e) => props.setTravelerElement(e.target.value)}>\n              {\n                Object.keys(talents).map(element => (\n                  <option key={element} value={element}>\n                    {element.charAt(0).toUpperCase() + element.slice(1)}\n                  </option>\n                ))\n              }\n            </select>\n          }\n          <div className=\"character-card\">\n            <button className=\"character-toggle\">\n              <img\n                className={\"character-icon\"}\n                src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'}\n                alt={name}\n                onClick={(e) => props.toggleCharacter(characterKey, e)} />\n            </button>\n            {\n              <img\n                className={\"character-type\"}\n                src={process.env.PUBLIC_URL + '/images/' + element + '.png'}\n                alt={element} />\n            }\n          </div>\n          <StarLevel\n            name={characterKey}\n            level={props.stage}\n            disabled={disabled}\n            setStage={props.setCharacterStage}\n          />\n          <ul className=\"material-list info\">\n            {\n              Object.entries(calculateCharacterMaterials(characterKey, props.stage)).map(([key, value]) => (\n                value > 0 &&\n                <li key={key} className=\"material info\">\n                  <div className=\"material-image-container info\">\n                    <img className=\"material-image\" src={getImagePath(key)} alt={key} />\n                  </div>\n                  <div className=\"material-text info\">{value.toLocaleString()}</div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"talent-info\">\n          <h1 className=\"talent-title\">Talents</h1>\n          <ul className=\"talent-list\">\n            {\n              (name === 'Traveler' ? talents[props.getTravelerElement()] : talents).map(talent => (\n                <li key={talent} className=\"talent\">\n                  <h3 className=\"talent-name\">{talent}</h3>\n                  <div className=\"talent-label\">\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) - 1)}>-</button>\n                    <span className=\"talent-level\">{`Lv. ${props.getTalentLevel(characterKey, talent)}`}</span>\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) + 1)}>+</button>\n                  </div>\n                  <ul className=\"material-list info\">\n                    {\n                      Object.entries(calculateTalentMaterials(characterKey, props.getTalentLevel(characterKey, talent) - 1)).map(([key, value]) => (\n                        value > 0 &&\n                        <li key={key} className=\"material info\">\n                          <div className=\"material-image-container info\">\n                            <img className=\"material-image\" src={getImagePath(key)} alt={key} />\n                          </div>\n                          <div className=\"material-text info\">{value.toLocaleString()}</div>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default CharacterInfo","import React from 'react';\nimport StarLevel from './StarLevel';\nimport TypeFilter from './TypeFilter';\nimport \"./WeaponsPage.css\";\n\nclass WeaponsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  selectWeapon = (weapon) => {\n    const newWeapon = this.state.weapon === weapon ? undefined : weapon;\n    this.setState({ weapon: newWeapon });\n  }\n\n  setSearchText(searchText) {\n    this.setState({ searchText });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"filters\">\n          <div className=\"search-filter\">\n            <input\n              type=\"text\"\n              value={this.state.searchText}\n              placeholder=\"Search for a weapon...\"\n              onChange={(e) => this.setSearchText(e.target.value)} />\n          </div>\n          <TypeFilter type=\"weapon\" checked={this.state.weapon} selectFilter={this.selectWeapon} />\n        </div>\n        {\n          <div className=\"weapon-list\">\n            {\n              Object.entries(this.props.weapons)\n                .filter(([key, value]) => this.state.searchText === undefined || value.name.toLowerCase().includes(this.state.searchText.toLowerCase()))\n                .filter(([key, value]) => this.state.weapon === undefined || this.state.weapon === value.type)\n                .map(([key, value]) => (\n                  <div key={key} className={`weapon-details rarity-${value.rarity}`}>\n                    <div className=\"weapon-card\">\n                      <button className=\"weapon-toggle\" onClick={() => this.props.toggleWeapon(key)}>\n                        <img className={\"weapon-image\" + (this.props.selected(key) ? ' ' : ' inactive')} src={process.env.PUBLIC_URL + '/images/weapons/' + key + '.png'} alt={value.name} loading=\"lazy\" />\n                      </button>\n                      <StarLevel\n                        name={key}\n                        level={this.props.getWeaponStage(key)}\n                        disabled={!this.props.selected(key)}\n                        setStage={this.props.setWeaponStage}\n                      />\n                      <label className=\"weapon-name\">{value.name}</label>\n                    </div>\n                  </div>\n                ))\n            }\n          </div>\n        }\n      </>\n    )\n  }\n\n}\n\nexport default WeaponsPage","import React, {useState} from 'react';\nimport TypeFilter from './TypeFilter';\nimport { calculateCharacterMaterials, calculateTalentMaterials, calculateWeaponMaterials } from '../utils';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n  const [searchText, setSearchText] = useState('');\n  const [dayGroup, setDayGroup] = useState(undefined);\n  const [materialType, setMaterialType] = useState(undefined);\n\n  let materials = {};\n  Object.entries(props.state.characters)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      // character ascension materials\n      for (let i = value.stage; i < 6; i++) {\n        Object.entries(calculateCharacterMaterials(key, i)).forEach(([item, item_qty]) => {\n          addMaterial(materials, item, item_qty);\n        });\n      }\n      // flatten traveler talents for different elements to one object\n      let talents = {};\n      if (key === 'traveler') {\n        Object.values(value.talents).reduce((allTalents, elementalTalents) => {\n          return Object.assign(allTalents, { ...elementalTalents });\n        }, talents);\n      } else {\n        talents = value.talents;\n      }\n      // talent ascension materials\n      Object.values(talents).forEach((level) => {\n        for (let i = level - 1; i < 9; i++) {\n          Object.entries(calculateTalentMaterials(key, i)).forEach(([item, item_qty]) => {\n            addMaterial(materials, item, item_qty);\n          });\n        }\n      })\n    });\n  \n  // weapon ascension materials\n  Object.entries(props.state.weapons)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      for (let i = value.stage; i < 6; i++) {\n        Object.entries(calculateWeaponMaterials(key, i)).forEach(([item, item_qty]) => {\n          addMaterial(materials, item, item_qty);\n        });\n      }\n    });\n  let names = Object.keys(materials);\n  names = Object.values(props.materials)\n    .filter(material => material.name.toLowerCase().includes(searchText.toLowerCase()))\n    .filter(material => dayGroup === undefined || !material.hasOwnProperty('day_group') || (material.hasOwnProperty('day_group') && material.day_group === dayGroup))\n    .filter(material => !materialType || material.type === materialType)\n    .map(material => material.name).filter(name => names.includes(name));\n\n  return (\n    <>\n      <div className=\"filters\">\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            value={searchText}\n            placeholder=\"Search for a material...\"\n            onChange={(e) => setSearchText(e.target.value)} />\n        </div>\n        <TypeFilter type=\"material\" checked={materialType} selectFilter={setMaterialType} />\n        <TypeFilter type=\"days\" checked={dayGroup} selectFilter={setDayGroup} />\n      </div>\n      <ul className=\"material-list\">\n        {\n          names.map(material => (\n            <li className=\"material\" key={material}>\n              <div className=\"material-image-container\">\n                <img className=\"material-image\" src={getImagePath(material)} alt={material} />\n              </div>\n              <label className=\"material-text\">{material} - {materials[material].toLocaleString()}</label>\n            </li>\n          ))\n        }\n      </ul>\n    </>\n  )\n}\n\nfunction addMaterial(materials, name, qty) {\n  materials[name] = materials.hasOwnProperty(name) ? materials[name] + qty : qty;\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\nimport Weapons from './data/weapons.json';\n\nimport './App.css';\n\n/*\nInitialize character state to stage = -1 (disabled) and all talent levels to 1\n*/\nconst DEFAULT_CHARACTER_STATE = Object.entries(Characters).reduce((state, [key, value]) => {\n  const traveler = key === 'traveler';\n  let talents = {};\n  if (traveler) {\n    Object.entries(value.talents).reduce((obj, [key2, value2]) => {\n      let nestedTalents = value2.reduce((obj2, nestedTalent) => {\n        return Object.assign(obj2, { [nestedTalent]: 1 });\n      }, {});\n      return Object.assign(obj, { [key2]: nestedTalents });\n    }, talents);\n  } else {\n    value.talents.map(talent => {\n      return Object.assign(talents, { [talent]: 1 });\n    });\n  }\n  let character = { stage: -1, talents };\n  if (traveler) {\n    character.element = 'anemo';\n  }\n  return Object.assign(state, { [key]: character });\n}, {});\n\nconst DEFAULT_WEAPON_STATE = Object.keys(Weapons).reduce((state, key) => {\n  return Object.assign(state, { [key]: { stage: -1 } });\n}, {});\n\nconst DEFAULT_STATE = { characters: DEFAULT_CHARACTER_STATE, weapons: DEFAULT_WEAPON_STATE };\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    const savedState = JSON.parse(localStorage.getItem('state')) || DEFAULT_STATE;\n    const savedCharacters = Object.assign({}, DEFAULT_CHARACTER_STATE, { ...savedState.characters });\n    const savedWeapons = Object.assign({}, DEFAULT_WEAPON_STATE, { ...savedState.weapons });\n    this.state = Object.assign({}, DEFAULT_STATE, { characters: { ...savedCharacters }, weapons: { ...savedWeapons } });\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  /*\n  Set the character state back to default\n  Toggle the character between stage 0 (enabled) or -1 (disabled)\n  */\n  toggleCharacter = (character) => {\n    let characters = this.state.characters;\n    const currentCharacter = characters[character];\n    const stage = currentCharacter.stage === -1 ? 0 : -1;\n    const newState = Object.assign(currentCharacter, { ...DEFAULT_CHARACTER_STATE[character], stage });\n    characters = Object.assign({}, { ...characters, [character]: newState });\n    this.persistState({ characters });\n  }\n\n  getCharacterStage = (character) => {\n    return this.isCharacterSelected(character) ? this.state.characters[character].stage : -1;\n  }\n\n  setCharacterStage = (character, stage) => {\n    const newState = Object.assign({}, this.state.characters[character], { stage });\n    const characters = Object.assign({}, this.state.characters, { [character]: newState });\n    this.persistState({ characters });\n  }\n\n  getTalentLevel = (character, talent) => {\n    const currentCharacter = this.state.characters[character];\n    const talents = currentCharacter.talents;\n    return character === 'traveler' ? talents[currentCharacter.element][talent] : talents[talent];\n  }\n\n  setTalentLevel = (character, talent, level) => {\n    if (level < 1 || level > 10) {\n      return;\n    }\n    let currentCharacter = this.state.characters[character];\n    let currentTalents = currentCharacter.talents;\n    if (character === 'traveler') {\n      const element = currentCharacter.element;\n      const elementalTalents = Object.assign({}, currentTalents[element], { [talent]: level });\n      currentTalents = Object.assign({}, currentTalents, { [element]: elementalTalents });\n    } else {\n      currentTalents = Object.assign({}, currentTalents, { [talent]: level });\n    }\n    currentCharacter = Object.assign({}, currentCharacter, { talents: currentTalents });\n    const characters = Object.assign({}, this.state.characters, { [character]: currentCharacter });\n    this.persistState({ characters });\n  }\n\n  isCharacterSelected = (character) => {\n    return this.state.characters[character].stage !== -1;\n  }\n\n  getTravelerElement = () => {\n    return this.state.characters.traveler.element;\n  }\n\n  setTravelerElement = (element) => {\n    const characters = this.state.characters;\n    this.persistState({ characters: Object.assign({ ...characters }, { traveler: { ...characters.traveler, element } }) });\n  }\n\n  toggleWeapon = (weapon) => {\n    let weapons = this.state.weapons;\n    const currentWeapon = weapons[weapon];\n    const stage = currentWeapon.stage === -1 ? 0 : -1;\n    const newState = Object.assign(currentWeapon, { ...DEFAULT_WEAPON_STATE[weapon], stage });\n    weapons = Object.assign({}, { ...weapons, [weapon]: newState });\n    this.persistState({ weapons });\n  }\n\n  getWeaponStage = (weapon) => {\n    return this.isWeaponSelected(weapon) ? this.state.weapons[weapon].stage : -1;\n  }\n\n  setWeaponStage = (weapon, stage) => {\n    const newState = Object.assign({}, this.state.weapons[weapon], { stage });\n    const weapons = Object.assign({}, this.state.weapons, { [weapon]: newState });\n    this.persistState({ weapons });\n  }\n\n  isWeaponSelected = (weapon) => {\n    return this.state.weapons[weapon].stage !== -1;\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <>\n          <nav className=\"nav\">\n            <ul className=\"nav-list\">\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/characters\">Characters</NavLink></li>\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/weapons\">Weapons</NavLink></li>\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/characters\" />\n            </Route>\n            <Route exact path=\"/characters\" render={() => (\n              <CharactersPage\n                characters={Characters}\n                selected={this.isCharacterSelected}\n                toggleCharacter={this.toggleCharacter}\n                getCharacterStage={this.getCharacterStage}\n                setCharacterStage={this.setCharacterStage} />\n            )} />\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}\n                selected={this.isCharacterSelected}\n                stage={this.getCharacterStage(props.match.params.character)}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}\n                getTalentLevel={this.getTalentLevel}\n                setTalentLevel={this.setTalentLevel}\n                getTravelerElement={this.getTravelerElement}\n                setTravelerElement={this.setTravelerElement} />\n            )} />\n            <Route path=\"/weapons\" render={(props) => (\n              <WeaponsPage\n                weapons={Weapons}\n                selected={this.isWeaponSelected}\n                toggleWeapon={this.toggleWeapon}\n                getWeaponStage={this.getWeaponStage}\n                setWeaponStage={this.setWeaponStage}\n              />\n            )} />\n            <Route path=\"/materials\" render={(props) => (\n              <MaterialsPage\n                state={this.state}\n                materials={Materials} />\n            )} />\n          </div>\n        </>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}