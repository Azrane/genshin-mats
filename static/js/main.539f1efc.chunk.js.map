{"version":3,"sources":["components/StarLevel.jsx","components/TypeFilter.jsx","components/CharactersPage.jsx","utils.js","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/WeaponInfo.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","StarLevel","props","name","disabled","currentLevel","level","className","map","Fragment","key","id","type","value","checked","onChange","setStage","htmlFor","filterLists","element","list","weapon","material","names","days","TypeFilter","filter","index","selectFilter","undefined","src","process","alt","CharactersPage","useState","searchText","setSearchText","elementFilter","setElementFilter","weaponFilter","setWeaponFilter","placeholder","e","target","Object","entries","characters","includes","toLowerCase","selected","onClick","toggleCharacter","loading","getCharacterStage","setCharacterStage","to","calculateCharacterMaterials","character","stage","details","Characters","requirements","Stages","crystal","Materials","crystal_stg","elemental","specialty","common","common_stg","assign","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","calculateTalentMaterials","talents","talent_boss","talent_book","talent_book_stg","talent_common","crown_qty","talent_boss_qty","talent_book_qty","calculateWeaponMaterials","Weapons","weapons","rarity","weapon_material","weapon_stg","common_material1","common1","common_material2","common2","weapon_qty","common_qty_1","common_qty_2","getImagePath","replaceAll","CharacterInfo","characterKey","getTravelerElement","setTravelerElement","keys","charAt","toUpperCase","slice","toLocaleString","talent","setTalentLevel","getTalentLevel","WeaponsPage","toggleWeapon","getWeaponStage","setWeaponStage","WeaponInfo","weaponKey","getKey","addMaterial","materials","qty","hasOwnProperty","MaterialsPage","dayGroup","setDayGroup","materialType","setMaterialType","state","forEach","i","item","item_qty","values","reduce","allTalents","elementalTalents","day_group","DEFAULT_CHARACTER_STATE","traveler","obj","key2","nestedTalents","obj2","nestedTalent","DEFAULT_WEAPON_STATE","DEFAULT_STATE","App","currentCharacter","newState","persistState","isCharacterSelected","currentTalents","currentWeapon","isWeaponSelected","savedState","JSON","parse","localStorage","getItem","savedCharacters","savedWeapons","this","setState","setItem","stringify","basename","exact","path","render","match","params","React","Component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.539f1efc.chunk.js","sourcesContent":["import React from 'react';\nimport './StarLevel.css';\n\nconst characterLevels = [6, 5, 4, 3, 2, 1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction StarLevel(props) {\n  const name = props.name;\n  const disabled = props.disabled;\n  const currentLevel = props.level;\n  return (\n    <div className=\"star-level\">\n      {\n        characterLevels.map(level => (\n          <React.Fragment key={level}>\n            <input\n              id={`${name}${level}`}\n              type=\"radio\"\n              name={name}\n              value={level}\n              disabled={disabled}\n              checked={!disabled && level === currentLevel}\n              onChange={() => props.setStage(name, level)} />\n            <label className={disabled ? \"inactive\" : \"\"} htmlFor={`${name}${level}`}></label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default StarLevel;","import React from 'react';\nimport './TypeFilter.css';\n\nconst filterLists = {\n  element: {\n    type: 'image',\n    list: ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro']\n  },\n  weapon: {\n    type: 'image',\n    list: ['bow', 'catalyst', 'claymore', 'polearm', 'sword']\n  },\n  material: {\n    type: 'text',\n    list: [\"character\", \"talent\", \"weapon\", \"common\"],\n    names: [\"Character\", \"Talent\", \"Weapon\", \"Common\"]\n  },\n  days: {\n    type: 'text',\n    list: [1, 2, 3],\n    names: ['Mon/Thu', 'Tue/Fri', 'Wed/Sat']\n  }\n}\n\nfunction TypeFilter(props) {\n  return (\n    <div className=\"type-filter\">\n      {\n        filterLists[props.type].list.map((filter, index) => (\n          <React.Fragment key={filter}>\n            <input\n              className=\"filter-input\"\n              type=\"checkbox\"\n              name={props.type}\n              id={filter}\n              value={filter}\n              checked={props.checked === filter}\n              onChange={() => props.checked === filter ? props.selectFilter(undefined) : props.selectFilter(filter)}\n            />\n            <label className=\"filter-label\" htmlFor={filter}>\n              {\n                filterLists[props.type].type === 'image' ?\n                <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + filter + '.png'} alt={filter} /> :\n                <div className=\"filter-text\">{filterLists[props.type].names[index]}</div>\n              }\n            </label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default TypeFilter;","import React, {useState} from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport TypeFilter from './TypeFilter';\nimport \"./CharactersPage.css\";\n\nfunction CharactersPage(props) {\n  const [searchText, setSearchText] = useState('');\n  const [elementFilter, setElementFilter] = useState(undefined);\n  const [weaponFilter, setWeaponFilter] = useState(undefined);\n\n  return (\n    <>\n      <div className=\"filters\">\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            value={searchText}\n            placeholder=\"Search for a character...\"\n            onChange={(e) => setSearchText(e.target.value)} />\n        </div>\n        <TypeFilter type=\"element\" checked={elementFilter} selectFilter={setElementFilter} />\n        <TypeFilter type=\"weapon\" checked={weaponFilter} selectFilter={setWeaponFilter} />\n      </div>\n      <div className=\"character-list\">\n        {\n          Object.entries(props.characters)\n            .filter(([key, value]) => searchText === undefined || key.includes(searchText.toLowerCase()))\n            .filter(([key, value]) => elementFilter === undefined || elementFilter === value.type || value.type === 'flex')\n            .filter(([key, value]) => weaponFilter === undefined || weaponFilter === value.weapon)\n            .map(([key, value]) => (\n              <div key={key} className=\"character-portrait\">\n                <button className=\"character-toggle\">\n                  <img\n                    className={\"character-icon\" + (props.selected(key) ? \"\" : \" inactive\")}\n                    src={process.env.PUBLIC_URL + \"/images/characters/\" + value.name + \".png\"}\n                    alt={value.name}\n                    onClick={(e) => props.toggleCharacter(key, e)}\n                    loading=\"lazy\" />\n                </button>\n                {\n                  key !== 'traveler' &&\n                  <img\n                    className={\"character-type\" + (props.selected(key) ? \"\" : \" inactive\")}\n                    src={process.env.PUBLIC_URL + \"/images/\" + value.type + \".png\"}\n                    alt={value.type}\n                    loading=\"lazy\" />\n                }\n                <StarLevel\n                  name={key}\n                  level={props.getCharacterStage(key)}\n                  disabled={!props.selected(key)}\n                  setStage={props.setCharacterStage}\n                />\n                <NavLink to={`/characters/${key}`} className=\"character-name\">{value.name}</NavLink>\n              </div>\n            ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default CharactersPage","import Characters from './data/characters.json';\nimport Weapons from './data/weapons.json';\nimport Materials from './data/materials.json';\nimport Stages from './data/stages.json';\n\nexport const calculateCharacterMaterials = (character, stage) => {\n  if (stage < 0 || stage >= 6) return {};\n  const details = Characters[character];\n  const requirements = Stages.characters[stage];\n  const element = details.type;\n  const crystal = Materials[element + '_crystal_' + requirements.crystal_stg].name;\n  const elemental = element === 'flex' ? undefined : Materials[element + '_elemental'].name;\n  const specialty = Materials[details.specialty].name;\n  const common = Materials[details.common + '_' + requirements.common_stg].name;\n  return Object.assign({}, {\n    [crystal]: requirements.crystal_qty,\n    [elemental]: requirements.elemental_qty,\n    [specialty]: requirements.specialty_qty,\n    [common]: requirements.common_qty,\n    'Mora': requirements.mora\n  });\n}\n\nexport const calculateTalentMaterials = (character, level) => {\n  if (level > 8) return {};\n  const details = Characters[character];\n  const requirements = Stages.talents[level];\n  const talent_boss = Materials[details.talent_boss].name;\n  const talent_book = Materials[(character === 'traveler' ? details.talent_book[level % 3] : details.talent_book) + '_' + requirements.talent_book_stg].name;\n  const common = Materials[(character === 'traveler' ? details.talent_common : details.common) + '_' + requirements.common_stg].name;\n  return Object.assign({}, {\n    'Crown of Sagehood': requirements.crown_qty,\n    [talent_boss]: requirements.talent_boss_qty,\n    [talent_book]: requirements.talent_book_qty,\n    [common]: requirements.common_qty,\n    'Mora': requirements.mora\n  });\n}\n\nexport const calculateWeaponMaterials = (weapon, stage) => {\n  if (stage < 0 || stage >= 6) return {};\n  const details = Weapons[weapon];\n  const requirements = Stages.weapons[details.rarity][stage];\n  const weapon_material = Materials[`${details.weapon}_${requirements.weapon_stg}`].name;\n  const common_material1 = Materials[`${details.common1}_${requirements.common_stg}`].name;\n  const common_material2 = Materials[`${details.common2}_${requirements.common_stg}`].name;\n  return Object.assign({}, {\n    [weapon_material]: requirements.weapon_qty,\n    [common_material1]: requirements.common_qty_1,\n    [common_material2]: requirements.common_qty_2,\n    'Mora': requirements.mora\n  });\n}","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharacterInfo.css\";\nimport { calculateCharacterMaterials, calculateTalentMaterials } from '../utils';\n\nfunction CharacterInfo(props) {\n  const name = props.character.name;\n  const characterKey = name.toLowerCase();\n  const disabled = !props.selected(characterKey);\n  const talents = props.character.talents;\n  let element = name === 'Traveler' ? props.getTravelerElement() : props.character.type;\n  return (\n    <>\n      <NavLink className=\"back-button\" to=\"/characters\">&larr;</NavLink>\n      <div className={\"character-info\" + (!disabled ? '' : ' inactive')}>\n        <div className=\"character-portrait info\">\n          <h1 className={\"character-name info\"}>{name}</h1>\n          {\n            characterKey === 'traveler' &&\n            <select className=\"element-list\" value={props.getTravelerElement()} onChange={(e) => props.setTravelerElement(e.target.value)}>\n              {\n                Object.keys(talents).map(element => (\n                  <option key={element} value={element}>\n                    {element.charAt(0).toUpperCase() + element.slice(1)}\n                  </option>\n                ))\n              }\n            </select>\n          }\n          <div className=\"character-card\">\n            <button className=\"character-toggle\">\n              <img\n                className={\"character-icon\"}\n                src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'}\n                alt={name}\n                onClick={(e) => props.toggleCharacter(characterKey, e)} />\n            </button>\n            {\n              <img\n                className={\"character-type\"}\n                src={process.env.PUBLIC_URL + '/images/' + element + '.png'}\n                alt={element} />\n            }\n          </div>\n          <StarLevel\n            name={characterKey}\n            level={props.stage}\n            disabled={disabled}\n            setStage={props.setCharacterStage}\n          />\n          <ul className=\"material-list info\">\n            {\n              Object.entries(calculateCharacterMaterials(characterKey, props.stage)).map(([key, value]) => (\n                value > 0 &&\n                <li key={key} className=\"material info\">\n                  <div className=\"material-image-container info\">\n                    <img className=\"material-image\" src={getImagePath(key)} alt={key} />\n                  </div>\n                  <div className=\"material-text info\">{value.toLocaleString()}</div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"talent-info\">\n          <h1 className=\"talent-title\">Talents</h1>\n          <ul className=\"talent-list\">\n            {\n              (name === 'Traveler' ? talents[props.getTravelerElement()] : talents).map(talent => (\n                <li key={talent} className=\"talent\">\n                  <h3 className=\"talent-name\">{talent}</h3>\n                  <div className=\"talent-label\">\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) - 1)}>-</button>\n                    <span className=\"talent-level\">{`Lv. ${props.getTalentLevel(characterKey, talent)}`}</span>\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) + 1)}>+</button>\n                  </div>\n                  <ul className=\"material-list info\">\n                    {\n                      Object.entries(calculateTalentMaterials(characterKey, props.getTalentLevel(characterKey, talent) - 1)).map(([key, value]) => (\n                        value > 0 &&\n                        <li key={key} className=\"material info\">\n                          <div className=\"material-image-container info\">\n                            <img className=\"material-image\" src={getImagePath(key)} alt={key} />\n                          </div>\n                          <div className=\"material-text info\">{value.toLocaleString()}</div>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default CharacterInfo","import React, {useState} from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport TypeFilter from './TypeFilter';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage(props) {\n  const [searchText, setSearchText] = useState('');\n  const [weaponFilter, setWeaponFilter] = useState(undefined);\n\n  return (\n    <>\n      <div className=\"filters\">\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            value={searchText}\n            placeholder=\"Search for a weapon...\"\n            onChange={(e) => setSearchText(e.target.value)} />\n        </div>\n        <TypeFilter type=\"weapon\" checked={weaponFilter} selectFilter={setWeaponFilter} />\n      </div>\n      {\n        <div className=\"weapon-list\">\n          {\n            Object.entries(props.weapons)\n              .filter(([key, value]) => searchText === undefined || value.name.toLowerCase().includes(searchText.toLowerCase()))\n              .filter(([key, value]) => weaponFilter === undefined || weaponFilter === value.type)\n              .map(([key, value]) => (\n                <div key={key} className={`weapon-details rarity-${value.rarity}`}>\n                  <div className=\"weapon-card\">\n                    <button className=\"weapon-toggle\" onClick={() => props.toggleWeapon(key)}>\n                      <img\n                        className={\"weapon-image\" + (props.selected(key) ? \"\" : \" inactive\")}\n                        src={process.env.PUBLIC_URL + \"/images/weapons/\" + key + \".png\"}\n                        alt={value.name}\n                        loading=\"lazy\" />\n                    </button>\n                    <StarLevel\n                      name={key}\n                      level={props.getWeaponStage(key)}\n                      disabled={!props.selected(key)}\n                      setStage={props.setWeaponStage}\n                    />\n                    <NavLink to={`/weapons/${key}`} className=\"weapon-name\">{value.name}</NavLink>\n                  </div>\n                </div>\n              ))\n          }\n        </div>\n      }\n    </>\n  )\n}\n\n\nexport default WeaponsPage","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./WeaponInfo.css\";\nimport { calculateWeaponMaterials } from '../utils';\n\nfunction WeaponInfo(props) {\n  const name = props.weapon.name;\n  const weaponKey = getKey(name);\n  const disabled = !props.selected(weaponKey);\n  return (\n    <>\n      <NavLink className=\"back-button\" to=\"/weapons\">&larr;</NavLink>\n      <div className={\"character-info\" + (!disabled ? '' : ' inactive')}>\n        <div className=\"character-portrait info\">\n          <h1 className={\"character-name info\"}>{name}</h1>\n          <div className=\"character-card\">\n            <button className=\"character-toggle\">\n              <img\n                className={\"character-icon\"}\n                src={process.env.PUBLIC_URL + '/images/weapons/' + weaponKey + '.png'}\n                alt={name}\n                onClick={(e) => props.toggleWeapon(weaponKey, e)} />\n            </button>\n          </div>\n          <StarLevel\n            name={weaponKey}\n            level={props.stage}\n            disabled={disabled}\n            setStage={props.setWeaponStage}\n          />\n          <ul className=\"material-list info\">\n            {\n              Object.entries(calculateWeaponMaterials(weaponKey, props.stage)).map(([key, value]) => (\n                value > 0 &&\n                <li key={key} className=\"material info\">\n                  <div className=\"material-image-container info\">\n                    <img className=\"material-image\" src={getImagePath(key)} alt={key} />\n                  </div>\n                  <div className=\"material-text info\">{value.toLocaleString()}</div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction getKey(name) {\n  return name.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default WeaponInfo;","import React, {useState} from 'react';\nimport TypeFilter from './TypeFilter';\nimport { calculateCharacterMaterials, calculateTalentMaterials, calculateWeaponMaterials } from '../utils';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n  const [searchText, setSearchText] = useState('');\n  const [dayGroup, setDayGroup] = useState(undefined);\n  const [materialType, setMaterialType] = useState(undefined);\n\n  let materials = {};\n  Object.entries(props.state.characters)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      // character ascension materials\n      for (let i = value.stage; i < 6; i++) {\n        Object.entries(calculateCharacterMaterials(key, i)).forEach(([item, item_qty]) => {\n          addMaterial(materials, item, item_qty);\n        });\n      }\n      // flatten traveler talents for different elements to one object\n      let talents = {};\n      if (key === 'traveler') {\n        Object.values(value.talents).reduce((allTalents, elementalTalents) => {\n          return Object.assign(allTalents, { ...elementalTalents });\n        }, talents);\n      } else {\n        talents = value.talents;\n      }\n      // talent ascension materials\n      Object.values(talents).forEach((level) => {\n        for (let i = level - 1; i < 9; i++) {\n          Object.entries(calculateTalentMaterials(key, i)).forEach(([item, item_qty]) => {\n            addMaterial(materials, item, item_qty);\n          });\n        }\n      })\n    });\n  \n  // weapon ascension materials\n  Object.entries(props.state.weapons)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      for (let i = value.stage; i < 6; i++) {\n        Object.entries(calculateWeaponMaterials(key, i)).forEach(([item, item_qty]) => {\n          addMaterial(materials, item, item_qty);\n        });\n      }\n    });\n  let names = Object.keys(materials);\n  names = Object.values(props.materials)\n    .filter(material => material.name.toLowerCase().includes(searchText.toLowerCase()))\n    .filter(material => dayGroup === undefined || !material.hasOwnProperty('day_group') || (material.hasOwnProperty('day_group') && material.day_group === dayGroup))\n    .filter(material => !materialType || material.type === materialType)\n    .map(material => material.name).filter(name => names.includes(name));\n\n  return (\n    <>\n      <div className=\"filters\">\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            value={searchText}\n            placeholder=\"Search for a material...\"\n            onChange={(e) => setSearchText(e.target.value)} />\n        </div>\n        <TypeFilter type=\"material\" checked={materialType} selectFilter={setMaterialType} />\n        <TypeFilter type=\"days\" checked={dayGroup} selectFilter={setDayGroup} />\n      </div>\n      <ul className=\"material-list\">\n        {\n          names.map(material => (\n            <li className=\"material\" key={material}>\n              <div className=\"material-image-container\">\n                <img className=\"material-image\" src={getImagePath(material)} alt={material} />\n              </div>\n              <label className=\"material-text\">{material} - {materials[material].toLocaleString()}</label>\n            </li>\n          ))\n        }\n      </ul>\n    </>\n  )\n}\n\nfunction addMaterial(materials, name, qty) {\n  materials[name] = materials.hasOwnProperty(name) ? materials[name] + qty : qty;\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport WeaponInfo from './components/WeaponInfo';\nimport MaterialsPage from './components/MaterialsPage';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\nimport Weapons from './data/weapons.json';\n\nimport './App.css';\n\n/*\nInitialize character state to stage = -1 (disabled) and all talent levels to 1\n*/\nconst DEFAULT_CHARACTER_STATE = Object.entries(Characters).reduce((state, [key, value]) => {\n  const traveler = key === 'traveler';\n  let talents = {};\n  if (traveler) {\n    Object.entries(value.talents).reduce((obj, [key2, value2]) => {\n      let nestedTalents = value2.reduce((obj2, nestedTalent) => {\n        return Object.assign(obj2, { [nestedTalent]: 1 });\n      }, {});\n      return Object.assign(obj, { [key2]: nestedTalents });\n    }, talents);\n  } else {\n    value.talents.map(talent => {\n      return Object.assign(talents, { [talent]: 1 });\n    });\n  }\n  let character = { stage: -1, talents };\n  if (traveler) {\n    character.element = 'anemo';\n  }\n  return Object.assign(state, { [key]: character });\n}, {});\n\nconst DEFAULT_WEAPON_STATE = Object.keys(Weapons).reduce((state, key) => {\n  return Object.assign(state, { [key]: { stage: -1 } });\n}, {});\n\nconst DEFAULT_STATE = { characters: DEFAULT_CHARACTER_STATE, weapons: DEFAULT_WEAPON_STATE };\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    const savedState = JSON.parse(localStorage.getItem('state')) || DEFAULT_STATE;\n    const savedCharacters = Object.assign({}, DEFAULT_CHARACTER_STATE, { ...savedState.characters });\n    const savedWeapons = Object.assign({}, DEFAULT_WEAPON_STATE, { ...savedState.weapons });\n    this.state = Object.assign({}, DEFAULT_STATE, { characters: { ...savedCharacters }, weapons: { ...savedWeapons } });\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  /*\n  Set the character state back to default\n  Toggle the character between stage 0 (enabled) or -1 (disabled)\n  */\n  toggleCharacter = (character) => {\n    let characters = this.state.characters;\n    const currentCharacter = characters[character];\n    const stage = currentCharacter.stage === -1 ? 0 : -1;\n    const newState = Object.assign(currentCharacter, { ...DEFAULT_CHARACTER_STATE[character], stage });\n    characters = Object.assign({}, { ...characters, [character]: newState });\n    this.persistState({ characters });\n  }\n\n  getCharacterStage = (character) => {\n    return this.isCharacterSelected(character) ? this.state.characters[character].stage : -1;\n  }\n\n  setCharacterStage = (character, stage) => {\n    const newState = Object.assign({}, this.state.characters[character], { stage });\n    const characters = Object.assign({}, this.state.characters, { [character]: newState });\n    this.persistState({ characters });\n  }\n\n  getTalentLevel = (character, talent) => {\n    const currentCharacter = this.state.characters[character];\n    const talents = currentCharacter.talents;\n    return character === 'traveler' ? talents[currentCharacter.element][talent] : talents[talent];\n  }\n\n  setTalentLevel = (character, talent, level) => {\n    if (level < 1 || level > 10) {\n      return;\n    }\n    let currentCharacter = this.state.characters[character];\n    let currentTalents = currentCharacter.talents;\n    if (character === 'traveler') {\n      const element = currentCharacter.element;\n      const elementalTalents = Object.assign({}, currentTalents[element], { [talent]: level });\n      currentTalents = Object.assign({}, currentTalents, { [element]: elementalTalents });\n    } else {\n      currentTalents = Object.assign({}, currentTalents, { [talent]: level });\n    }\n    currentCharacter = Object.assign({}, currentCharacter, { talents: currentTalents });\n    const characters = Object.assign({}, this.state.characters, { [character]: currentCharacter });\n    this.persistState({ characters });\n  }\n\n  isCharacterSelected = (character) => {\n    return this.state.characters[character].stage !== -1;\n  }\n\n  getTravelerElement = () => {\n    return this.state.characters.traveler.element;\n  }\n\n  setTravelerElement = (element) => {\n    const characters = this.state.characters;\n    this.persistState({ characters: Object.assign({ ...characters }, { traveler: { ...characters.traveler, element } }) });\n  }\n\n  toggleWeapon = (weapon) => {\n    let weapons = this.state.weapons;\n    const currentWeapon = weapons[weapon];\n    const stage = currentWeapon.stage === -1 ? 0 : -1;\n    const newState = Object.assign(currentWeapon, { ...DEFAULT_WEAPON_STATE[weapon], stage });\n    weapons = Object.assign({}, { ...weapons, [weapon]: newState });\n    this.persistState({ weapons });\n  }\n\n  getWeaponStage = (weapon) => {\n    return this.isWeaponSelected(weapon) ? this.state.weapons[weapon].stage : -1;\n  }\n\n  setWeaponStage = (weapon, stage) => {\n    const newState = Object.assign({}, this.state.weapons[weapon], { stage });\n    const weapons = Object.assign({}, this.state.weapons, { [weapon]: newState });\n    this.persistState({ weapons });\n  }\n\n  isWeaponSelected = (weapon) => {\n    return this.state.weapons[weapon].stage !== -1;\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <>\n          <nav className=\"nav\">\n            <ul className=\"nav-list\">\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/characters\">Characters</NavLink></li>\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/weapons\">Weapons</NavLink></li>\n              <li className=\"nav-list-item\"><NavLink className=\"nav-link\" exact to=\"/materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/characters\" />\n            </Route>\n            <Route exact path=\"/characters\" render={() => (\n              <CharactersPage\n                characters={Characters}\n                selected={this.isCharacterSelected}\n                toggleCharacter={this.toggleCharacter}\n                getCharacterStage={this.getCharacterStage}\n                setCharacterStage={this.setCharacterStage} />\n            )} />\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}\n                selected={this.isCharacterSelected}\n                stage={this.getCharacterStage(props.match.params.character)}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}\n                getTalentLevel={this.getTalentLevel}\n                setTalentLevel={this.setTalentLevel}\n                getTravelerElement={this.getTravelerElement}\n                setTravelerElement={this.setTravelerElement} />\n            )} />\n            <Route exact path=\"/weapons\" render={(props) => (\n              <WeaponsPage\n                weapons={Weapons}\n                selected={this.isWeaponSelected}\n                toggleWeapon={this.toggleWeapon}\n                getWeaponStage={this.getWeaponStage}\n                setWeaponStage={this.setWeaponStage}\n              />\n            )} />\n            <Route path=\"/weapons/:weapon\" render={(props) => (\n              <WeaponInfo\n                weapon={Weapons[props.match.params.weapon]}\n                selected={this.isWeaponSelected}\n                stage={this.getWeaponStage(props.match.params.weapon)}\n                toggleWeapon={this.toggleWeapon}\n                setWeaponStage={this.setWeaponStage} />\n            )} />\n            <Route path=\"/materials\" render={(props) => (\n              <MaterialsPage\n                state={this.state}\n                materials={Materials} />\n            )} />\n          </div>\n        </>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}