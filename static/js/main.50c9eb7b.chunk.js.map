{"version":3,"sources":["components/CharactersPage.jsx","components/TalentsPage.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","CharactersPage","props","toggleCharacter","bind","setCharacterStage","character","this","stage","state","hasOwnProperty","level","selected","className","Object","values","characters","map","key","name","src","process","alt","onClick","e","type","Fragment","id","value","disabled","checked","isLevel","onChange","htmlFor","React","Component","TalentsPage","WeaponsPage","getImagePath","material","console","log","toLowerCase","replace","replaceAll","MaterialsPage","materials","entries","filter","forEach","element","elemental","specialty","i","stages","crystal","crystal_stg","common","common_stg","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","names","keys","includes","App","JSON","parse","localStorage","getItem","persistState","setState","setItem","stringify","basename","to","exact","path","render","Characters","component","Stages","Materials","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"ouVAGIA,G,YAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAkElBC,E,kDA/Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBAHR,E,4DAMHE,GACdC,KAAKL,MAAMC,gBAAgBG,K,wCAGXA,EAAWE,GAC3BD,KAAKL,MAAMG,kBAAkBC,EAAWE,K,+BAGjCF,GACP,OAAOC,KAAKL,MAAMO,MAAMC,eAAeJ,KAAqD,IAAvCC,KAAKL,MAAMO,MAAMH,GAAWE,Q,8BAG3EF,EAAWK,GACjB,OAAOJ,KAAKK,SAASN,IAAcC,KAAKL,MAAMO,MAAMH,GAAjB,QAAyCK,I,+BAGpE,IAAD,OACP,OACE,yBAAKE,UAAU,kBAETC,OAAOC,OAAOR,KAAKL,MAAMc,YAAYC,KAAI,SAAAX,GAAS,OAChD,yBAAKY,IAAKZ,EAAUa,KAAMN,UAAU,sBAClC,yBACEA,UAAW,mBAAqB,EAAKD,SAASN,EAAUa,MAAQ,GAAK,YACrEC,IAAKC,mCAAiDf,EAAUa,KAAO,OACvEG,IAAKhB,EAAUa,KACfI,QAAS,SAACC,GAAD,OAAO,EAAKrB,gBAAgBG,EAAUa,KAAMK,MACvD,yBACEX,UAAW,mBAAqB,EAAKD,SAASN,EAAUa,MAAQ,GAAK,YACrEC,IAAKC,wBAAsCf,EAAUmB,KAAO,OAC5DH,IAAKhB,EAAUmB,OACjB,yBAAKZ,UAAU,cAEXb,EAAgBiB,KAAI,SAAAN,GAAK,OACvB,kBAAC,IAAMe,SAAP,CAAgBR,IAAKP,GACnB,2BACEgB,GAAIrB,EAAUa,KAAO,GAAKR,EAC1Bc,KAAK,QACLN,KAAMb,EAAUa,KAChBS,MAAOjB,EACPkB,UAAW,EAAKjB,SAASN,EAAUa,MACnCW,QAAS,EAAKC,QAAQzB,EAAUa,KAAMR,GACtCqB,SAAU,SAACR,GAAD,OAAO,EAAKnB,kBAAkBC,EAAUa,KAAMR,EAAOa,MACjE,2BAAOS,QAAS3B,EAAUa,KAAO,GAAKR,SAK9C,2BAAOE,UAAU,kBAAkBP,EAAUa,e,GAvDhCe,IAAMC,W,MCIpBC,MANf,WACI,OACI,wC,MCIOC,MANf,WACI,OACI,wC,cCqCR,SAASC,EAAaC,GAElB,OADAC,QAAQC,IAAIF,EAASG,cAAcC,QAAQ,IAAK,MACzCtB,kCAAgDkB,EAASG,cAAcE,WAAW,IAAK,KAAO,OAG1FC,MA5Cf,SAAuB3C,GACnB,IAAI4C,EAAY,GAChBhC,OAAOiC,QAAQ7C,EAAMO,OAAOuC,QAAO,+CAAsC,IAAtC,KAAuB,SAAkBC,SAAQ,YAIhF,IAJmG,IAAD,mBAAhB/B,EAAgB,KAAXU,EAAW,KAC5FsB,EAAUhD,EAAMc,WAAWE,EAAIwB,eAAejB,KAC9C0B,EAAYjD,EAAM4C,UAAUI,EAAU,cAAc/B,KACpDiC,EAAYlD,EAAM4C,UAAU5C,EAAMc,WAAWE,EAAIwB,eAAeU,WAAWjC,KACxEkC,EAAIzB,EAAMpB,MAAO6C,EAAI,EAAGA,IAAK,CAClC,IAAI7C,EAAQN,EAAMoD,OAAOtC,WAAWqC,GAC9BE,EAAUrD,EAAM4C,UAAUI,EAAU,YAAc1C,EAAMgD,aAAarC,KACrEsC,EAASvD,EAAM4C,UAAU5C,EAAMc,WAAWE,EAAIwB,eAAee,OAAS,IAAMjD,EAAMkD,YAAYvC,KACpG2B,EAAUS,GAAWT,EAAUpC,eAAe6C,GAAWT,EAAUS,GAAW/C,EAAMmD,YAAcnD,EAAMmD,YACxGb,EAAUK,GAAaL,EAAUpC,eAAeyC,GAAaL,EAAUK,GAAa3C,EAAMoD,cAAgBpD,EAAMoD,cAChHd,EAAUM,GAAaN,EAAUpC,eAAe0C,GAAaN,EAAUM,GAAa5C,EAAMqD,cAAgBrD,EAAMqD,cAChHf,EAAUW,GAAUX,EAAUpC,eAAe+C,GAAUX,EAAUW,GAAUjD,EAAMsD,WAAatD,EAAMsD,WACpGhB,EAAUiB,KAAOjB,EAAUpC,eAAe,QAAUoC,EAAUiB,KAAOvD,EAAMuD,KAAMvD,EAAMuD,SAG/F,IAAIC,EAAQlD,OAAOmD,KAAKnB,GAKxB,OAJAkB,EAAQlD,OAAOC,OAAOb,EAAM4C,WAAW7B,KAAI,SAAAsB,GAAQ,OAAIA,EAASpB,QAAM6B,QAAO,SAAA7B,GAAI,OAAK6C,EAAME,SAAS/C,MACrGqB,QAAQC,IAAIK,GACZN,QAAQC,IAAIuB,GAGR,6BACI,yCACA,yBAAKnD,UAAU,iBAEPmD,EAAM/C,KAAI,SAAAsB,GAAQ,OACd,yBAAK1B,UAAU,YACX,yBAAKA,UAAU,iBAAiBO,IAAKkB,EAAaC,GAAWjB,IAAKiB,IAClE,2BAAO1B,UAAU,iBAAiB0B,EAAlC,MAA+CO,EAAUP,WC8CtE4B,E,kDAjEb,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKK,MAAQ2D,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAE/D/B,QAAQC,IAAI,EAAKhC,OANA,E,4DASHH,GACVC,KAAKE,MAAMC,eAAeJ,IACS,IAAjCC,KAAKE,MAAMH,GAAWE,MACxBD,KAAKiE,aAAL,eAAoBlE,EAAY,CAACE,MAAO,KAExCD,KAAKiE,aAAL,eAAoBlE,EAAY,CAACE,OAAQ,KAG3CD,KAAKiE,aAAL,eAAoBlE,EAAY,CAACE,MAAO,O,wCAI1BF,EAAWE,GAC3BD,KAAKiE,aAAL,eAAoBlE,EAAY,CAACE,a,mCAGtBC,GAAQ,IAAD,OAClBF,KAAKkE,SAAShE,GAAO,kBAAM6D,aAAaI,QAAQ,aAAcN,KAAKO,UAAU,EAAKlE,a,+BAG1E,IAAD,OACP,OACE,kBAAC,IAAD,CAAYmE,SAAS,KACnB,6BACE,yBAAK/D,UAAU,UACb,4BACE,4BAAI,kBAAC,IAAD,CAASgE,GAAG,KAAZ,eACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,gBAGR,yBAAKhE,UAAU,WACb,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,kBAAC,EAAD,CACEvE,MAAO,EAAKA,MACZO,WAAYiE,EACZ9E,gBAAmB,EAAKA,gBACxBE,kBAAqB,EAAKA,uBAE9B,kBAAC,IAAD,CAAO0E,KAAK,WAAWG,UAAW9C,IAClC,kBAAC,IAAD,CAAO2C,KAAK,WAAWG,UAAW7C,IAClC,kBAAC,IAAD,CAAO0C,KAAK,aAAaC,OAAQ,kBAC/B,kBAAC,EAAD,CACEvE,MAAO,EAAKA,MACZ6C,OAAQ6B,EACRnE,WAAYiE,EACZnC,UAAWsC,c,GA1DTlD,IAAMC,WCAJkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.50c9eb7b.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CharactersPage.css\";\n\nlet characterLevels = [6,5,4,3,2,1] // reversed order because rotateY done in css due to nature of css selectors\n\nclass CharactersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n  }\n\n  toggleCharacter(character) {\n    this.props.toggleCharacter(character);\n  }\n\n  setCharacterStage(character, stage) {\n    this.props.setCharacterStage(character, stage);\n  }\n\n  selected(character) {\n    return this.props.state.hasOwnProperty(character) && this.props.state[character].stage !== -1;\n  }\n\n  isLevel(character, level) {\n    return this.selected(character) && this.props.state[character]['stage'] === level;\n  }\n\n  render() {\n    return (\n      <div className=\"character-list\">\n          {\n            Object.values(this.props.characters).map(character => (\n              <div key={character.name} className=\"character-portrait\">\n                <img\n                  className={\"character-icon \" + (this.selected(character.name) ? '' : 'inactive')}\n                  src={process.env.PUBLIC_URL + '/images/characters/' + character.name + '.png'}\n                  alt={character.name}\n                  onClick={(e) => this.toggleCharacter(character.name, e)}/>\n                <img\n                  className={\"character-type \" + (this.selected(character.name) ? '' : 'inactive')}\n                  src={process.env.PUBLIC_URL + '/images/' + character.type + '.png'}\n                  alt={character.type}/>\n                <div className=\"star-level\">\n                  {\n                    characterLevels.map(level => (\n                      <React.Fragment key={level}>\n                        <input\n                          id={character.name + \"\" + level}\n                          type=\"radio\"\n                          name={character.name}\n                          value={level}\n                          disabled={!this.selected(character.name)}\n                          checked={this.isLevel(character.name, level)}\n                          onChange={(e) => this.setCharacterStage(character.name, level, e)}/>\n                        <label htmlFor={character.name + \"\" + level}></label>\n                      </React.Fragment>\n                    ))\n                  }\n                </div>\n                <label className=\"character-name\">{character.name}</label>\n              </div>\n            ))\n          }\n      </div>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport \"./TalentsPage.css\";\n\nfunction TalentsPage() {\n    return (\n        <h1>Talents</h1>\n    )\n}\n\nexport default TalentsPage","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage() {\n    return (\n        <h1>Weapons</h1>\n    )\n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n    let materials = {};\n    Object.entries(props.state).filter(([key, value]) => value['stage'] !== -1).forEach(([key, value]) => {\n        const element = props.characters[key.toLowerCase()].type;\n        const elemental = props.materials[element + '_elemental'].name;\n        const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n        for (let i = value.stage; i < 6; i++) {\n            let stage = props.stages.characters[i];\n            const crystal = props.materials[element + '_crystal_' + stage.crystal_stg].name;\n            const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n            materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n            materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n            materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n            materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n            materials.mora = materials.hasOwnProperty('mora') ? materials.mora + stage.mora: stage.mora\n        }\n    });\n    let names = Object.keys(materials);\n    names = Object.values(props.materials).map(material => material.name).filter(name  => names.includes(name));\n    console.log(materials);\n    console.log(names);\n\n    return (\n        <div>\n            <h1>Materials</h1>\n            <div className=\"material-list\">\n                {\n                    names.map(material => (\n                        <div className=\"material\">\n                            <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n                            <label className=\"material-text\">{material} - {materials[material]}</label>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nfunction getImagePath(material) {\n    console.log(material.toLowerCase().replace(' ', '_'));\n    return process.env.PUBLIC_URL + '/images/materials/' + material.toLowerCase().replaceAll(' ', '_') + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\n\nimport './App.css';\nimport CharactersPage from './components/CharactersPage';\nimport TalentsPage from './components/TalentsPage';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n    this.state = JSON.parse(localStorage.getItem('characters')) || { };\n    // this.state = { }\n    console.log(this.state);\n  }\n\n  toggleCharacter(character) {\n    if (this.state.hasOwnProperty(character)) {\n      if (this.state[character].stage === -1) {\n        this.persistState({[character]: {stage: 0}});\n      } else {\n        this.persistState({[character]: {stage: -1}});\n      }\n    } else {\n      this.persistState({[character]: {stage: 0}});\n    }\n  }\n\n  setCharacterStage(character, stage) {\n    this.persistState({[character]: {stage}}); // e.target.value is supposed to be integer, but somehow casted as string\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('characters', JSON.stringify(this.state)));\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink to=\"/\">Characters</NavLink></li>\n              <li><NavLink to=\"/Talents\">Talents</NavLink></li>\n              <li><NavLink to=\"/Weapons\">Weapons</NavLink></li>\n              <li><NavLink to=\"/Materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\" render={() => (\n              <CharactersPage\n                state={this.state}\n                characters={Characters}\n                toggleCharacter = {this.toggleCharacter}\n                setCharacterStage = {this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/Talents\" component={TalentsPage}></Route>\n            <Route path=\"/Weapons\" component={WeaponsPage}></Route>\n            <Route path=\"/Materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}