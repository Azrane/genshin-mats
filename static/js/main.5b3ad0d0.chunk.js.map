{"version":3,"sources":["components/CharactersPage.jsx","components/TalentsPage.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","elementList","weaponList","CharactersPage","props","toggleCharacter","bind","setCharacterStage","state","elementFilters","weaponFilters","character","this","stage","element","includes","filter","item","setState","weapon","hasOwnProperty","level","selected","className","map","key","onClick","toggleElement","src","process","alt","toggleWeapon","Object","values","characters","type","name","e","Fragment","id","value","disabled","checked","isLevel","onChange","htmlFor","React","Component","TalentsPage","WeaponsPage","getImagePath","material","toLowerCase","replaceAll","MaterialsPage","materials","entries","forEach","elemental","undefined","specialty","i","stages","console","log","crystal","crystal_stg","common","common_stg","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","names","keys","App","JSON","parse","localStorage","getItem","persistState","setItem","stringify","basename","exact","to","path","render","Characters","component","Stages","Materials","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b3ad0d0.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CharactersPage.css\";\n\nlet characterLevels = [6,5,4,3,2,1]; // reversed order because rotateY done in css due to nature of css selectors\nlet elementList = ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro'];\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n    this.state = {elementFilters: [...elementList], weaponFilters: [...weaponList]};\n  }\n\n  toggleCharacter(character) {\n    this.props.toggleCharacter(character);\n  }\n\n  setCharacterStage(character, stage) {\n    this.props.setCharacterStage(character, stage);\n  }\n\n  toggleElement(element) {\n    let elementFilters = this.state.elementFilters;\n    elementFilters = elementFilters.includes(element) ? elementFilters.filter(item => item !== element) : [element, ...elementFilters];\n    this.setState({elementFilters});\n  }\n\n  toggleWeapon(weapon) {\n    let weaponFilters = this.state.weaponFilters;\n    weaponFilters = weaponFilters.includes(weapon) ? weaponFilters.filter(item => item !== weapon) : [weapon, ...weaponFilters];\n    this.setState({weaponFilters});\n  }\n\n  selected(character) {\n    return this.props.state.hasOwnProperty(character) && this.props.state[character].stage !== -1;\n  }\n\n  isLevel(character, level) {\n    return this.selected(character) && this.props.state[character]['stage'] === level;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"filters\">\n          <ul className=\"element-filters\">\n            {\n              elementList.map(element => (\n                <li key={element}>\n                  <button className={\"filter \" + (this.state.elementFilters.includes(element) ? 'active' : '')} onClick={() => this.toggleElement(element)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + element + '.png'} alt={element}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n          <ul className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <li key={weapon}>\n                  <button className={\"filter \" + (this.state.weaponFilters.includes(weapon) ? 'active' : '')} onClick={() => this.toggleWeapon(weapon)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-list\">\n            {\n              Object.values(this.props.characters)\n                .filter(character => ['flex', ...this.state.elementFilters].includes(character.type) && this.state.weaponFilters.includes(character.weapon))\n                .map(character => (\n                  <div key={character.name} className=\"character-portrait\">\n                    <img\n                      className={\"character-icon \" + (this.selected(character.name) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + character.name + '.png'}\n                      alt={character.name}\n                      onClick={(e) => this.toggleCharacter(character.name, e)}/>\n                    {\n                      character.name !== 'Traveler' &&\n                      <img\n                        className={\"character-type \" + (this.selected(character.name) ? '' : 'inactive')}\n                        src={process.env.PUBLIC_URL + '/images/' + character.type + '.png'}\n                        alt={character.type}/>\n                    }\n                    <div className=\"star-level\">\n                      {\n                        characterLevels.map(level => (\n                          <React.Fragment key={level}>\n                            <input\n                              id={character.name + \"\" + level}\n                              type=\"radio\"\n                              name={character.name}\n                              value={level}\n                              disabled={!this.selected(character.name)}\n                              checked={this.isLevel(character.name, level)}\n                              onChange={(e) => this.setCharacterStage(character.name, level, e)}/>\n                            <label htmlFor={character.name + \"\" + level}></label>\n                          </React.Fragment>\n                        ))\n                      }\n                    </div>\n                    <label className=\"character-name\">{character.name}</label>\n                  </div>\n                ))\n            }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport \"./TalentsPage.css\";\n\nfunction TalentsPage() {\n    return (\n        <h1>Talents</h1>\n    )\n}\n\nexport default TalentsPage","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage() {\n    return (\n        <h1>Weapons</h1>\n    )\n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n    let materials = {};\n    Object.entries(props.state)\n        .filter(([key, value]) => value['stage'] !== -1)\n        .forEach(([key, value]) => {\n            const element = props.characters[key.toLowerCase()].type;\n            const elemental = element !== 'flex' ? props.materials[element + '_elemental'].name : undefined;\n            const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n            for (let i = value.stage; i < 6; i++) {\n                let stage = props.stages.characters[i];\n                console.log(key);\n                console.log(value);\n                const crystal = props.materials[(element === 'flex' ? 'diamond' : element)+ '_crystal_' + stage.crystal_stg].name;\n                const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n                materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n                materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n                materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n                materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n                materials.mora = materials.hasOwnProperty('mora') ? materials.mora + stage.mora: stage.mora\n            }\n        });\n    let names = Object.keys(materials);\n    names = Object.values(props.materials).map(material => material.name).filter(name  => names.includes(name));\n\n    return (\n        <div>\n            <h1>Materials</h1>\n            <ul className=\"material-list\">\n                {\n                    names.map(material => (\n                        <li className=\"material\" key={material}>\n                            <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n                            <label className=\"material-text\">{material} - {materials[material]}</label>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nfunction getImagePath(material) {\n    return process.env.PUBLIC_URL + '/images/materials/' + material.toLowerCase().replaceAll(' ', '_') + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\n\nimport './App.css';\nimport CharactersPage from './components/CharactersPage';\nimport TalentsPage from './components/TalentsPage';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.toggleCharacter = this.toggleCharacter.bind(this);\n    this.setCharacterStage = this.setCharacterStage.bind(this);\n    this.state = JSON.parse(localStorage.getItem('characters')) || { };\n    // this.state = { }\n    console.log(this.state);\n  }\n\n  toggleCharacter(character) {\n    if (this.state.hasOwnProperty(character)) {\n      if (this.state[character].stage === -1) {\n        this.persistState({[character]: {stage: 0}});\n      } else {\n        this.persistState({[character]: {stage: -1}});\n      }\n    } else {\n      this.persistState({[character]: {stage: 0}});\n    }\n  }\n\n  setCharacterStage(character, stage) {\n    this.persistState({[character]: {stage}}); // e.target.value is supposed to be integer, but somehow casted as string\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('characters', JSON.stringify(this.state)));\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink exact to=\"/\">Characters</NavLink></li>\n              <li><NavLink to=\"/Talents\">Talents</NavLink></li>\n              <li><NavLink to=\"/Weapons\">Weapons</NavLink></li>\n              <li><NavLink to=\"/Materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\" render={() => (\n              <CharactersPage\n                state={this.state}\n                characters={Characters}\n                toggleCharacter = {this.toggleCharacter}\n                setCharacterStage = {this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/Talents\" component={TalentsPage}></Route>\n            <Route path=\"/Weapons\" component={WeaponsPage}></Route>\n            <Route path=\"/Materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}