{"version":3,"sources":["components/StarLevel.jsx","components/CharactersPage.jsx","components/CharacterInfo.jsx","components/WeaponsPage.jsx","components/MaterialsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["characterLevels","StarLevel","props","name","disabled","currentLevel","level","className","map","Fragment","key","id","type","value","checked","onChange","setStage","htmlFor","elementList","weaponList","CharactersPage","state","elementFilters","weaponFilters","element","this","includes","filter","item","setState","weapon","onClick","toggleElement","src","process","alt","toggleWeapon","Object","entries","characters","selected","e","toggleCharacter","getCharacterStage","setCharacterStage","to","React","Component","CharacterInfo","character","characterKey","toLowerCase","talents","getTravelerElement","setTravelerElement","target","keys","charAt","toUpperCase","slice","stage","talent","setTalentLevel","getTalentLevel","WeaponsPage","addMaterial","materials","qty","hasOwnProperty","getImagePath","material","replaceAll","MaterialsPage","forEach","details","elemental","undefined","specialty","i","stages","crystal","crystal_stg","common","common_stg","crystal_qty","elemental_qty","specialty_qty","common_qty","mora","values","reduce","allTalents","elementalTalents","assign","requirements","talent_boss_qty","talent_book_stg","talent_book_qty","talent_boss","talent_book","talent_common","names","toLocaleString","DEFAULT_CHARACTER_STATE","Characters","traveler","obj","key2","nestedTalents","obj2","nestedTalent","DEFAULT_WEAPON_STATE","DEFAULT_STATE","weapons","App","currentCharacter","newState","persistState","isCharacterSelected","currentTalents","savedState","JSON","parse","localStorage","getItem","savedCharacters","savedWeapons","setItem","stringify","basename","exact","path","render","match","params","component","Stages","Materials","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32e6fe3c.chunk.js","sourcesContent":["import React from 'react';\nimport './StarLevel.css';\n\nconst characterLevels = [6, 5, 4, 3, 2, 1]; // reversed order because rotateY done in css due to nature of css selectors\n\nfunction StarLevel(props) {\n  const name = props.name;\n  const disabled = props.disabled;\n  const currentLevel = props.level;\n  return (\n    <div className=\"star-level\">\n      {\n        characterLevels.map(level => (\n          <React.Fragment key={level}>\n            <input\n              id={`${name}${level}`}\n              type=\"radio\"\n              name={name}\n              value={level}\n              disabled={disabled}\n              checked={!disabled && level === currentLevel}\n              onChange={() => props.setStage(name, level)} />\n            <label className={disabled ? \"inactive\" : \"\"} htmlFor={`${name}${level}`}></label>\n          </React.Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default StarLevel;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharactersPage.css\";\n\nlet elementList = ['anemo', 'cryo', 'electro', 'dendro', 'geo', 'hydro', 'pyro'];\nlet weaponList = ['bow', 'catalyst', 'claymore', 'polearm', 'sword'];\n\nclass CharactersPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { elementFilters: [...elementList], weaponFilters: [...weaponList] };\n  }\n\n  toggleElement(element) {\n    let elementFilters = this.state.elementFilters;\n    elementFilters = elementFilters.includes(element) ? elementFilters.filter(item => item !== element) : [element, ...elementFilters];\n    this.setState({elementFilters});\n  }\n\n  toggleWeapon(weapon) {\n    let weaponFilters = this.state.weaponFilters;\n    weaponFilters = weaponFilters.includes(weapon) ? weaponFilters.filter(item => item !== weapon) : [weapon, ...weaponFilters];\n    this.setState({weaponFilters});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"filters\">\n          <ul className=\"element-filters\">\n            {\n              elementList.map(element => (\n                <li key={element}>\n                  <button className={\"filter \" + (this.state.elementFilters.includes(element) ? 'active' : '')} onClick={() => this.toggleElement(element)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + element + '.png'} alt={element}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n          <ul className=\"weapon-filters\">\n            {\n              weaponList.map(weapon => (\n                <li key={weapon}>\n                  <button className={\"filter \" + (this.state.weaponFilters.includes(weapon) ? 'active' : '')} onClick={() => this.toggleWeapon(weapon)}>\n                    <img className=\"filter-image\" src={process.env.PUBLIC_URL + '/images/' + weapon + '.png'} alt={weapon}/>\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-list\">\n            {\n              Object.entries(this.props.characters)\n                .filter(([key, value]) => ['flex', ...this.state.elementFilters].includes(value.type) && this.state.weaponFilters.includes(value.weapon))\n                .map(([key, value]) => (\n                  <div key={key} className=\"character-portrait\">\n                    <img\n                      className={\"character-icon \" + (this.props.selected(key) ? '' : 'inactive')}\n                      src={process.env.PUBLIC_URL + '/images/characters/' + value.name + '.png'}\n                      alt={value.name}\n                      onClick={(e) => this.props.toggleCharacter(key, e)}/>\n                    {\n                      key !== 'traveler' &&\n                      <img\n                        className={\"character-type \" + (this.props.selected(key) ? '' : 'inactive')}\n                        src={process.env.PUBLIC_URL + '/images/' + value.type + '.png'}\n                        alt={value.type}/>\n                    }\n                    <StarLevel\n                      name={key}\n                      level={this.props.getCharacterStage(key)}\n                      disabled={!this.props.selected(key)}\n                      setStage={this.props.setCharacterStage}\n                    />\n                    <NavLink to={`/characters/${key}`} className=\"character-name\">{value.name}</NavLink>\n                  </div>\n                ))\n            }\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CharactersPage","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport StarLevel from './StarLevel';\nimport \"./CharacterInfo.css\";\n\nfunction CharacterInfo(props) {\n  const name = props.character.name;\n  const characterKey = name.toLowerCase();\n  const disabled = !props.selected(characterKey);\n  const talents = props.character.talents;\n  let element = name === 'Traveler' ? props.getTravelerElement() : props.character.type;\n  return (\n    <>\n      <NavLink className=\"back-button\" to=\"/characters\">&larr;</NavLink>\n      <div className={\"character-info\" + (!disabled ? '' : ' inactive')}>\n        <div className=\"character-info-grp\">\n          <h2 className={\"character-name\"}>{name}</h2>\n          {\n            characterKey === 'traveler' &&\n            <select className=\"element-list\" value={props.getTravelerElement()} onChange={(e) => props.setTravelerElement(e.target.value)}>\n              {\n                Object.keys(talents).map(element => (\n                  <option key={element} value={element}>\n                    {element.charAt(0).toUpperCase() + element.slice(1)}\n                  </option>\n                ))\n              }\n            </select>\n          }\n          <div className=\"character-card\">\n            <img\n              className={\"character-icon\"}\n              src={process.env.PUBLIC_URL + '/images/characters/' + name + '.png'}\n              alt={name}\n              onClick={(e) => props.toggleCharacter(characterKey, e)} />\n            {\n              <img\n                className={\"character-type\"}\n                src={process.env.PUBLIC_URL + '/images/' + element + '.png'}\n                alt={element} />\n            }\n          </div>\n          <StarLevel\n            name={characterKey}\n            level={props.stage}\n            disabled={disabled}\n            setStage={props.setCharacterStage}\n          />\n        </div>\n        <div className=\"character-info-grp\">\n          <h2 className=\"talent-title\">Talents</h2>\n          <ul className=\"talent-list\">\n            {\n              (name === 'Traveler' ? talents[props.getTravelerElement()] : talents).map(talent => (\n                <li key={talent} className=\"talent\">\n                  <span className=\"talent-name\">{talent}</span>\n                  <div className=\"talent-label\">\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) - 1)}>-</button>\n                    <span className=\"talent-level\">{`Lv. ${props.getTalentLevel(characterKey, talent)}`}</span>\n                    <button className=\"talent-control\"\n                      disabled={disabled}\n                      onClick={(e) => props.setTalentLevel(characterKey, talent, props.getTalentLevel(characterKey, talent) + 1)}>+</button>\n                  </div>\n\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"character-info-grp\">\n          <h2 className=\"ascension-title\">Ascension</h2>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CharacterInfo","import React from 'react';\nimport \"./WeaponsPage.css\";\n\nfunction WeaponsPage() {\n  return (\n    <h1>Weapons</h1>\n  )\n}\n\nexport default WeaponsPage","import React from 'react';\nimport \"./MaterialsPage.css\";\n\nfunction MaterialsPage(props) {\n  let materials = {};\n  Object.entries(props.state.characters)\n    .filter(([key, value]) => value['stage'] !== -1)\n    .forEach(([key, value]) => {\n      const characters = props.characters;\n      const character = key;\n      const details = characters[character];\n      const element = props.characters[key.toLowerCase()].type;\n      const elemental = element !== 'flex' ? props.materials[element + '_elemental'].name : undefined;\n      const specialty = props.materials[props.characters[key.toLowerCase()].specialty].name;\n      // character ascension\n      for (let i = value.stage; i < 6; i++) {\n        let stage = props.stages.characters[i];\n        const crystal = props.materials[(element === 'flex' ? 'diamond' : element) + '_crystal_' + stage.crystal_stg].name;\n        const common = props.materials[props.characters[key.toLowerCase()].common + '_' + stage.common_stg].name;\n        materials[crystal] = materials.hasOwnProperty(crystal) ? materials[crystal] + stage.crystal_qty : stage.crystal_qty;\n        materials[elemental] = materials.hasOwnProperty(elemental) ? materials[elemental] + stage.elemental_qty : stage.elemental_qty;\n        materials[specialty] = materials.hasOwnProperty(specialty) ? materials[specialty] + stage.specialty_qty : stage.specialty_qty;\n        materials[common] = materials.hasOwnProperty(common) ? materials[common] + stage.common_qty : stage.common_qty;\n        addMaterial(materials, 'Mora', stage.mora);\n      }\n      // talent ascension\n      let talents = {};\n      if (character === 'traveler') {\n        Object.values(value.talents).reduce((allTalents, elementalTalents) => {\n          return Object.assign(allTalents, { ...elementalTalents });\n        }, talents);\n      } else {\n        talents = value.talents;\n      }\n      Object.entries(talents).forEach(([talent, level]) => {\n        for (let i = level - 1; i < 9; i++) {\n          const requirements = props.stages.talents[i];\n          const talent_boss_qty = requirements.talent_boss_qty;\n          const talent_book_stg = requirements.talent_book_stg;\n          const talent_book_qty = requirements.talent_book_qty;\n          const common_qty = requirements.common_qty;\n          const common_stg = requirements.common_stg;\n          const talent_boss = props.materials[details.talent_boss].name;\n          const talent_book = props.materials[(character === 'traveler' ? details.talent_book[i % 3] : details.talent_book) + \"_\" + talent_book_stg].name;\n          const common = props.materials[(character === 'traveler' ? details.talent_common : details.common) + \"_\" + common_stg].name;\n          addMaterial(materials, talent_boss, talent_boss_qty);\n          addMaterial(materials, talent_book, talent_book_qty);\n          addMaterial(materials, common, common_qty);\n          addMaterial(materials, 'Mora', requirements.mora);\n        }\n      })\n    });\n  let names = Object.keys(materials);\n  names = Object.values(props.materials).map(material => material.name).filter(name => names.includes(name));\n\n  return (\n    <div>\n      <h1>Materials</h1>\n      <ul className=\"material-list\">\n        {\n          names.map(material => (\n            <li className=\"material\" key={material}>\n              <img className=\"material-image\" src={getImagePath(material)} alt={material}></img>\n              <label className=\"material-text\">{material} - {materials[material].toLocaleString()}</label>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nfunction addMaterial(materials, name, qty) {\n  materials[name] = materials.hasOwnProperty(name) ? materials[name] + qty : qty;\n}\n\nfunction getImagePath(material) {\n  const name = material.toLowerCase().replaceAll(' ', '_').replaceAll('\\'', '').replaceAll('\"', '');\n  return process.env.PUBLIC_URL + '/images/materials/' + name + '.png'\n}\n\nexport default MaterialsPage","import React from 'react';\nimport { Route, NavLink, HashRouter, Redirect } from \"react-router-dom\";\nimport CharactersPage from './components/CharactersPage';\nimport CharacterInfo from './components/CharacterInfo';\nimport WeaponsPage from './components/WeaponsPage';\nimport MaterialsPage from './components/MaterialsPage';\nimport Stages from './data/stages.json';\nimport Characters from './data/characters.json';\nimport Materials from './data/materials.json';\n\nimport './App.css';\n\n/*\nInitialize character state to stage = -1 (disabled) and all talent levels to 1\n*/\nconst DEFAULT_CHARACTER_STATE = Object.entries(Characters).reduce((state, [key, value]) => {\n  const traveler = key === 'traveler';\n  let talents = {};\n  if (traveler) {\n    Object.entries(value.talents).reduce((obj, [key2, value2]) => {\n      let nestedTalents = value2.reduce((obj2, nestedTalent) => {\n        return Object.assign(obj2, {[nestedTalent]: 1});\n      }, {});\n      return Object.assign(obj, {[key2]: nestedTalents});\n    }, talents);\n  } else {\n    value.talents.map(talent => {\n      return Object.assign(talents, {[talent]: 1});\n    });\n  }\n  let character = {stage: -1, talents};\n  if (traveler) {\n    character.element = 'anemo';\n  }\n  return Object.assign(state, {[key]: character});\n}, {});\n\nconst DEFAULT_WEAPON_STATE = {}\n\nconst DEFAULT_STATE = { characters: DEFAULT_CHARACTER_STATE, weapons: DEFAULT_WEAPON_STATE };\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    const savedState = JSON.parse(localStorage.getItem('state')) || DEFAULT_STATE;\n    const savedCharacters = Object.assign({}, DEFAULT_CHARACTER_STATE, {...savedState.characters});\n    const savedWeapons = Object.assign({}, DEFAULT_WEAPON_STATE, {...savedState.weapons});\n    this.state = Object.assign({}, DEFAULT_STATE, {characters: {...savedCharacters}, weapons: {...savedWeapons}});\n  }\n\n  persistState(state) {\n    this.setState(state, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  /*\n  Set the character state back to default\n  Toggle the character between stage 0 (enabled) or -1 (disabled)\n  */\n  toggleCharacter = (character) => {\n    let characters = this.state.characters;\n    const currentCharacter = characters[character];\n    const stage = currentCharacter.stage === 0 ? -1 : 0;\n    const newState = Object.assign(currentCharacter, {...DEFAULT_CHARACTER_STATE[character], stage});\n    characters = Object.assign({}, {...characters, [character]: newState});\n    this.persistState({characters});\n  }\n\n  getCharacterStage = (character) => {\n    return this.isCharacterSelected(character) ? this.state.characters[character].stage : -1;\n  }\n\n  setCharacterStage = (character, stage) => {\n    const newState = Object.assign({}, this.state.characters[character], {stage});\n    const characters = Object.assign({}, this.state.characters, {[character]: newState});\n    this.persistState({characters});\n  }\n\n  getTalentLevel = (character, talent) => {\n    const currentCharacter = this.state.characters[character];\n    const talents = currentCharacter.talents;\n    return character === 'traveler' ? talents[currentCharacter.element][talent] : talents[talent];\n  }\n\n  setTalentLevel = (character, talent, level) => {\n    if (level < 1 || level > 10) {\n      return;\n    }\n    let currentCharacter = this.state.characters[character];\n    let currentTalents = currentCharacter.talents;\n    if (character === 'traveler') {\n      const element = currentCharacter.element;\n      const elementalTalents = Object.assign({}, currentTalents[element], {[talent]: level});\n      currentTalents = Object.assign({}, currentTalents, {[element]: elementalTalents});\n    } else {\n      currentTalents = Object.assign({}, currentTalents, {[talent]: level});\n    }\n    currentCharacter = Object.assign({}, currentCharacter, {talents: currentTalents});\n    const characters = Object.assign({}, this.state.characters, {[character]: currentCharacter});\n    this.persistState({characters});\n  }\n\n  isCharacterSelected = (character) => {\n    return this.state.characters[character].stage !== -1;\n  }\n\n  getTravelerElement = () => {\n    return this.state.characters.traveler.element;\n  }\n\n  setTravelerElement = (element) => {\n    const characters = this.state.characters;\n    this.persistState({characters: Object.assign({...characters}, {traveler: {...characters.traveler, element}})});\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <React.Fragment>\n          <nav className=\"navbar\">\n            <ul>\n              <li><NavLink exact to=\"/characters\">Characters</NavLink></li>\n              <li><NavLink exact to=\"/weapons\">Weapons</NavLink></li>\n              <li><NavLink exact to=\"/materials\">Materials</NavLink></li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Route exact path=\"/\">\n              <Redirect to=\"/characters\"/>\n            </Route>\n            <Route exact path=\"/characters\" render={() => (\n              <CharactersPage\n                characters={Characters}\n                selected={this.isCharacterSelected}\n                getCharacterStage={this.getCharacterStage}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}/>\n            )}/>\n            <Route path=\"/characters/:character\" render={(props) => (\n              <CharacterInfo\n                character={Characters[props.match.params.character]}\n                selected={this.isCharacterSelected}\n                stage={this.getCharacterStage(props.match.params.character)}\n                toggleCharacter={this.toggleCharacter}\n                setCharacterStage={this.setCharacterStage}\n                getTalentLevel={this.getTalentLevel}\n                setTalentLevel={this.setTalentLevel}\n                getTravelerElement={this.getTravelerElement}\n                setTravelerElement={this.setTravelerElement}/>\n            )}/>\n            <Route path=\"/weapons\" component={WeaponsPage}></Route>\n            <Route path=\"/materials\" render={() => (\n              <MaterialsPage\n                state={this.state}\n                stages={Stages}\n                characters={Characters}\n                materials={Materials}/>\n            )}/>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}